{"version":3,"sources":["../../src/pages/formulaire/aliments/aliments.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/localstockage.ts","../../src/pages/formulaire/maladie/maladie.ts","../../src/pages/formulaire/therapies/therapies.ts","../../src/pages/formulaire/therapies-alter/therapies-alter.ts","../../src/pages/formulaire/traitement-nom/traitement-nom.ts","../../src/pages/formulaire/info-perso/info-perso.ts","../../src/pages/formulaire/fin-formulaire/fin-formulaire.ts","../../src/providers/cancer.ts","../../src/pages/formulaire/raison-refus-formulaire/raison-refus-formulaire.ts","../../src/pages/formulaire/refus-formulaire/refus-formulaire.ts","../../src/providers/formulaire.ts","../../src/pages/center/center.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/inactif.ts","../../src/providers/diacritics.ts","../../src/pages/accueil/accueil.ts","../../src/providers/api.ts","../../src/providers/validators.ts","../../src/pages/autocomplete/autocomplete.ts","../../src/providers/traitement.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, Content } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\n\r\n//Page suivante\r\nimport { InfoPerso } from '../info-perso/info-perso';\r\n\r\n//Providers\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { Diacritics } from '../../../providers/diacritics';\r\nimport { Inactif } from '../../../providers/inactif';\r\n\r\n@Component({\r\n  selector: 'aliments',\r\n  templateUrl: 'aliments.html'\r\n})\r\nexport class Aliments {\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  alimentationForm: FormGroup;\r\n  submitAttempt: boolean = false;\r\n  showScrollFabTherapies: boolean = false;\r\n  contentDimensions: any;\r\n  \r\n  constructor(public navCtrl: NavController, public zone: NgZone, public translate: TranslateService, public formBuilder: FormBuilder, public formulaire: Formulaire, public localstockage: LocalStockage, public keyboard: Keyboard, public diacritics: Diacritics, public inactif: Inactif) {\r\n    this.alimentationForm = formBuilder.group({\r\n      alimentsForm:  [''],\r\n      fruitsForm:  [''],\r\n    });\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabTherapies = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cahcer le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabTherapies = true;\r\n      } else {\r\n        this.showScrollFabTherapies = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur la page du formulaire - Aliments.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la dernière page du formulaire - Informations Personnelles.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    this.submitAttempt = true;\r\n    if(this.alimentationForm.valid){\r\n\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.alimentationForm.value).then((message) => {\r\n        //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n        this.localstockage.getData(\"idForm\").then((val)=> {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n            if (val==null){\r\n              //Si le formulaire n'a pas été créé, il faut le créer\r\n              this.formulaire.createForm(dataForm);\r\n            } else {\r\n              //Sinon, il faut le mettre à jour\r\n              this.formulaire.updateForm(dataForm);\r\n            }\r\n          });\r\n          //Navigation à la page du formulaire - Traitements Alternatifs\r\n          this.navCtrl.push(InfoPerso);\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/aliments/aliments.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 164;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 164\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 207;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 207\n// module chunks = 0","import { Injectable } from '@angular/core';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n/**\r\n * @class LocalStockage - Ce service permet d'utiliser le stockage local de l'appareil.\r\n */\r\n\r\n@Injectable()\r\nexport class LocalStockage {\r\n\r\n  constructor(public storage: Storage) { }\r\n\r\n  /**\r\n   * Méthode qui permet d'enregistrer des données localement. les données sont enregistrées par paire clé/valeur.\r\n   * @method setData\r\n   * @param {Objet} - un objet est passé à la méthode qui enregistre indépendemment chacune de ses propriétés.\r\n   * @returns {Promise} - une promesse est renvoyée qui se termine lorsque l'ensemble des données a été enregistré. \r\n   */\r\n  setData(data) {\r\n    return new Promise((resolve,reject) => {\r\n      //Décomposition des propriétés de l'objet en paire clé/valeur\r\n      for(var propertyName in data) {\r\n        console.log(propertyName + ' en cours d\\'enregistrement : ' + data[propertyName]);\r\n        this.storage.set(propertyName,data[propertyName]);//Enregistrement de la paire clé/valeur\r\n      }\r\n      resolve('enregistré !');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Méthode qui récupère une donnée stockée localement à partir de sa clé.\r\n   * @method getData \r\n   * @param {string} - le nom de la clé identifiant la donnée stockée.\r\n   * @returns {promise} - une promesse est renvoyée qui se termine lorsque la donnée est récupérée. \r\n   */\r\n  getData(data){\r\n      return this.storage.get(data);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui permet de supprimer des données stockées localement. Seul l'identifiant d'un formulaire n'est pas supprimé, et les données des autres formulaires non envoyés sur le réseau.\r\n   * @method removeData \r\n   * @param {Objet} - l'objet dont les valeurs des propriétés doivent être supprimées.\r\n   * @returns {Promise} - une promesse est renvoyée qui se termine lorsque les données sont supprimées. \r\n   */\r\n  removeData(data){\r\n    return new Promise((resolve, reject) => {\r\n      for(var propertyName in data) {\r\n        //L'identifiant unique, qui peut être une des propriétés de l'objet data, n'est pas supprimé.\r\n        if (propertyName!=\"idForm\" && !propertyName.startsWith('Saved_Form') && propertyName!=\"setCenter\"){\r\n          this.storage.remove(propertyName).then(() => {\r\n            console.log(propertyName + ' supprimée');\r\n          });\r\n        }\r\n      }\r\n      resolve('Supression des données');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Méthode qui récupère l'ensemble des données stockées localement.\r\n   * @method getAllData\r\n   * @param {} - aucun paramètre n'est passé à la méthode.\r\n   * @returns {Promise} - une promesse est renvoyée avec les valeurs des donnés stockées sous la forme d'un objet. \r\n   */\r\n  getAllData(){\r\n    let dataStorage = {};\r\n    return new Promise((resolve, reject) => {\r\n      this.storage.forEach((value, key, index) => {\r\n        if (typeof key === 'string' && key.endsWith('Form')){\r\n          dataStorage[key]=value;\r\n          //console.log('la valeur est ' + value + ' et la key est ' + key);\r\n        }\r\n      }).then(() => {      \r\n        resolve(dataStorage);\r\n      });\r\n    }); \r\n  }\r\n\r\n  /**\r\n   * Méthode qui permet de supprimer des données stockées localement. Seules les données des autres formulaires non envoyés sur le réseau ne sont pas supprimées.\r\n   * @method clearAllData \r\n   * @param {} - l'objet dont les valeurs des propriétés doivent être supprimées.\r\n   * @returns {Promise} - une promesse est renvoyée qui se termine lorsque les données sont supprimées. \r\n   */\r\n  clearAllData(){\r\n    return new Promise((resolve, reject) => {\r\n      this.storage.forEach( (value, key, index) => {\r\n        if (!key.startsWith('Saved_Form') && key !== 'setCenter'){\r\n          this.storage.remove(key).then(() => {\r\n            //console.log(key + ' supprimée : ' + value);\r\n          });\r\n        }\r\n      }).then(() => {      \r\n        resolve('Supression des données');\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Méthode qui enregistre sous un nom particulier les données qui n'ont pas pu être envoyées sur le serveur, pour une prohcaine connexion.\r\n   * @method storeAllData\r\n   * @param {Objet} - l'objet dont les valeurs des propriétés doivent être enregistrées.\r\n   * @returns {Promise} - une promesse est renvoyée lorsque toutes les données ont été enregistrées.\r\n   */\r\n  storeAllData(data){\r\n    var currentTime = new Date();\r\n    let key = 'Saved_Form' + String(currentTime);\r\n    return this.storage.set(key,JSON.stringify(data));\r\n  }\r\n\r\n  /**\r\n   * Méthode qui récupère l'ensemble des données qui n'ont pas été envoyées sur le serveur mais qui ont été stockées localement.\r\n   * @method getStoreData\r\n   * @param {} - aucun paramètre n'est passé à la méthode.\r\n   * @returns {Promise} - une promesse est renvoyée avec les valeurs des donnés stockées sous la forme d'un objet. \r\n   */\r\n  getStoreData(){\r\n    var dataStorage = {};\r\n    return new Promise((resolve, reject) => {\r\n      this.storage.forEach( (value, key, index) => {\r\n        if (key.startsWith('Saved_Form')){\r\n          dataStorage[key] = value;\r\n          console.log(key + ' récupérée : ' + value);\r\n        }\r\n      }).then(() => {\r\n        resolve(dataStorage);\r\n      });\r\n    }); \r\n  }\r\n\r\n  /**\r\n   * Méthode qui supprime une paire key/value stockée\r\n   * @method clearData\r\n   * @param {string} - la key de la paire à supprimer est passée à la méthode.\r\n   * @returns {Promise} - une promesse est renvoyée lorsque la donnée a été supprimée. \r\n   */\r\n  clearData(key){\r\n    return this.storage.remove(key).then(() => {\r\n      //console.log(key + ' supprimée');\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/localstockage.ts","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, ModalController, Content } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\n\r\n//page suivante\r\nimport { Therapies } from '../therapies/therapies';\r\n\r\n//page autocomplete\r\nimport{ Autocomplete } from '../../autocomplete/autocomplete';\r\n\r\n//providers\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { Cancer } from '../../../providers/cancer';\r\nimport { Diacritics } from '../../../providers/diacritics';\r\nimport { Inactif } from '../../../providers/inactif';\r\nimport { MaladieValidator } from '../../../providers/validators';\r\n\r\n@Component({\r\n  selector: 'maladie',\r\n  templateUrl: 'maladie.html'\r\n})\r\nexport class Maladie implements OnInit {\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  maladieForm: FormGroup;\r\n  submitAttempt: boolean = false;\r\n  organeNom: any;\r\n  organeElement: any;\r\n  hematoNom: any;\r\n  hematoElement: any;\r\n  organeTitre: string;\r\n  organePlaceholder: string;\r\n  hematoTitre: string;\r\n  hematoPlaceholder: string;\r\n  organeChoix: string;\r\n  isHemato: boolean = false;\r\n  isNotHemato: boolean = false;\r\n  isOrgane: boolean = false;\r\n  showScrollFabMaladie: boolean = false;\r\n  contentDimensions: any;\r\n  \r\n  constructor(public navCtrl: NavController, public modalCtrl: ModalController, public zone: NgZone, public translate: TranslateService, public formBuilder: FormBuilder, public formulaire: Formulaire, public localstockage: LocalStockage, public organe: Cancer, public keyboard: Keyboard, public diacritics: Diacritics, public inactif: Inactif) {\r\n    this.maladieForm = formBuilder.group({\r\n      typeboolForm : ['', Validators.required],\r\n      organeboolForm : [''],\r\n      organeForm: ['', Validators.pattern('([A-Z ]{5})')],\r\n      nom_organeForm: ['', Validators.pattern('([0-9a-zA-Zéèêëàäâùüûïîöôçÿ\\u0152\\u0153\\\\- \\'\\(\\)]*)')],\r\n      etatForm:  ['']\r\n    },{ validator: MaladieValidator.isValid});\r\n    this.organeNom = [];\r\n    this.organeElement = [];\r\n    this.hematoNom = [];\r\n    this.hematoElement = [];\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ngOnInit(){\r\n    //Réuperation des données (id et nom) de la table cancer\r\n    this.organe.makeCancerList().then((liste) =>{\r\n      this.hematoNom = liste[0];\r\n      this.hematoElement = liste[1];\r\n      this.organeNom = liste[2];\r\n      this.organeElement = liste[3];\r\n    });\r\n    this.organeChoix = '';\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabMaladie = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cacher le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabMaladie = true;\r\n      } else {\r\n        this.showScrollFabMaladie = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet l'entrée du type de cancer.\r\n   * @method hematoOui()\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  hematoOui() {\r\n    this.isHemato = true;\r\n    this.isNotHemato = false;\r\n    this.isOrgane = false;\r\n    this.maladieForm.patchValue({organeForm: ''});\r\n    this.maladieForm.patchValue({nom_organeForm: ''});\r\n    this.organeChoix = '';\r\n    this.showHematoModal();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher de continuer le formulaire avec des cancers qui ne sont pas hématologiques.\r\n   * @method hematoNon()\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  hematoNon() {\r\n    this.isHemato = false;\r\n    this.isNotHemato = true;\r\n    this.maladieForm.patchValue({organeForm: ''});\r\n    this.maladieForm.patchValue({nom_organeForm: ''});\r\n    this.organeChoix = '';\r\n    //nouvelles dimensions de la fenêtre\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabMaladie = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet l'entrée du nom de l'organe primitif atteint.\r\n   * @method organeOui\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  organeOui() {\r\n    this.isHemato = false;\r\n    this.isNotHemato = true;\r\n    this.isOrgane = true;\r\n    this.showOrganeModal();\r\n    //nouvelles dimensions de la fenêtre\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabMaladie = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime l'entrée du nom de l'organe primitif atteint.\r\n   * @method organeNon\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  organeNon() {\r\n    this.isHemato = false;\r\n    this.isOrgane = false;\r\n    this.maladieForm.patchValue({organeForm: 'SAITP'});\r\n    this.maladieForm.patchValue({nom_organeForm: 'ne sais pas'});\r\n    this.organeChoix = '';\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au champ \"Maladie hématologique\" sur la deuxième page du formulaire - Maladie.\r\n   * Elle permet d'ouvrir une page modale (pages/autocomplete) qui propose, en fonction des entrées de l'utilisateur une liste de noms possibles : autocompletion.\r\n   * @method showHematoModal\r\n   * @requires pages/autocomplete - elle appelle la page autocomplete.ts.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  showHematoModal(){\r\n    //Création de la page modale en insérant les textes nécessaires\r\n    this.translate.get('TITRE_MODAL_HEMATO').subscribe(value => {\r\n      this.hematoTitre = value;\r\n    });\r\n    this.translate.get('PLACEHOLDER_MODAL_HEMATO').subscribe(value => {\r\n      this.hematoPlaceholder = value;\r\n    });\r\n    //Création de la page d'autocompletion\r\n    let hematoModal = this.modalCtrl.create(Autocomplete, {entryAutocomplete: this.organeChoix, dataAutocomplete: this.hematoNom, titreAutocomplete: this.hematoTitre, placeholderAutocomplete: this.hematoPlaceholder});\r\n    //Traitements lors de la fermeture de la page d'autocompletion\r\n    hematoModal.onDidDismiss(data => {\r\n      //Vérification que la donnée passée existe et n'est pas seulement des espaces\r\n      if (data && data.replace(/\\s/g, '').length!=0){\r\n        //Récupération des données de la page autocompletion\r\n        this.organeChoix = data;\r\n        //Comparaison avec la table cancer\r\n        var organeData = this.hematoElement.find((val)=>{\r\n          let strVal = this.diacritics.replaceDiacritics(val.nom.toLowerCase());\r\n          let strData = this.diacritics.replaceDiacritics(data.toLowerCase());\r\n          if(strVal === strData){\r\n            return val;\r\n          }\r\n        });\r\n        //Attribution de valeurs aux champs du formulaire (organeForm et nom_organeForm)\r\n        if(organeData){\r\n          this.maladieForm.patchValue({organeForm: organeData.id});\r\n          this.maladieForm.patchValue({nom_organeForm: organeData.nom});\r\n        } else {\r\n          this.maladieForm.patchValue({organeForm: 'AUCUN'});\r\n          this.maladieForm.patchValue({nom_organeForm: this.organeChoix});\r\n        }\r\n      }\r\n    });\r\n    //Affichage de la page d'autocompletion\r\n    hematoModal.present();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au champ \"Organe primitif atteint\" sur la deuxième page du formulaire - Maladie.\r\n   * Elle permet d'ouvrir une page modale (pages/autocomplete) qui propose, en fonction des entrées de l'utilisateur une liste de noms possibles : autocompletion.\r\n   * @method showOrganeModal\r\n   * @requires pages/autocomplete - elle appelle la page autocomplete.ts.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  showOrganeModal(){\r\n    //Création de la page modale en insérant les textes nécessaires\r\n    this.translate.get('TITRE_MODAL_ORGANE').subscribe(value => {\r\n      this.organeTitre = value;\r\n    });\r\n    this.translate.get('PLACEHOLDER_MODAL_ORGANE').subscribe(value => {\r\n      this.organePlaceholder = value;\r\n    });\r\n    //Création de la page d'autocompletion\r\n    let organeModal = this.modalCtrl.create(Autocomplete, {entryAutocomplete: this.organeChoix, dataAutocomplete: this.organeNom, titreAutocomplete: this.organeTitre, placeholderAutocomplete: this.organePlaceholder});\r\n    //Traitements lors de la fermeture de la page d'autocompletion\r\n    organeModal.onDidDismiss(data => {\r\n      //Vérification que la donnée passée existe et n'est pas seulement des espaces\r\n      if (data && data.replace(/\\s/g, '').length!=0){\r\n        //Récupération des données de la page autocompletion\r\n        this.organeChoix = data;\r\n        //Comparaison avec la table cancer\r\n        var organeData = this.organeElement.find((val)=>{\r\n          let strVal = this.diacritics.replaceDiacritics(val.nom.toLowerCase());\r\n          let strData = this.diacritics.replaceDiacritics(data.toLowerCase());\r\n          if(strVal === strData){\r\n            return val;\r\n          }\r\n        });\r\n        //Attribution de valeurs aux champs du formulaire (organeForm et nom_organeForm)\r\n        if (organeData) {\r\n          this.maladieForm.patchValue({organeForm: organeData.id});\r\n          this.maladieForm.patchValue({nom_organeForm: organeData.nom});\r\n        } else {\r\n          this.maladieForm.patchValue({organeForm: 'AUCUN'});\r\n          this.maladieForm.patchValue({nom_organeForm: this.organeChoix});\r\n        }\r\n      }\r\n    });\r\n    //Affichage de la page d'autocompletion\r\n    organeModal.present();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur la deuxième page du formulaire - Maladie.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la troisième page du formulaire - Traitements Alternatifs.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    //Booléen qui indique s'il faut ou non afficher les erreurs sur la page HTML\r\n    this.submitAttempt = true;\r\n    if(this.maladieForm.valid){\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.maladieForm.value).then((message) => {\r\n        //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n        this.localstockage.getData(\"idForm\").then((val)=> {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n            if (val==null){\r\n              //Si le formulaire n'a pas été créé, il faut le créer\r\n              this.formulaire.createForm(dataForm);\r\n            } else {\r\n              //Sinon, il faut le mettre à jour\r\n              this.formulaire.updateForm(dataForm);\r\n            }\r\n          });\r\n        });\r\n        //Navigation à la page du formulaire - Thérapies\r\n        this.navCtrl.push(Therapies);\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/maladie/maladie.ts","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, ModalController, Content } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\n\r\n//Page suivante\r\nimport { TherapiesAlter } from '../therapies-alter/therapies-alter';\r\n//Page d'autocompletion\r\nimport{ Autocomplete } from '../../autocomplete/autocomplete';\r\n\r\n//Providers\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { Traitement } from '../../../providers/traitement';\r\nimport { Diacritics } from '../../../providers/diacritics';\r\nimport { Inactif } from '../../../providers/inactif';\r\n\r\n@Component({\r\n  selector: 'therapies',\r\n  templateUrl: 'therapies.html'\r\n})\r\nexport class Therapies implements OnInit {\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  therapiesForm: FormGroup;\r\n  anticancerForm: FormGroup;\r\n  anticancerTable = [];\r\n  choixTable = [];\r\n  checkTraitement: boolean = false;\r\n  nbTraitement: number = 0;\r\n  submitAttempt: boolean = false;\r\n  traitementNom: any;\r\n  traitementElement: any;\r\n  traitementTitre: string;\r\n  traitementPlaceholder: string;\r\n  showScrollFabTherapies: boolean = false;\r\n  contentDimensions: any;\r\n  isTraitement: boolean = false;\r\n  \r\n  constructor(public navCtrl: NavController, public modalCtrl: ModalController, public zone: NgZone, public translate: TranslateService, public formBuilder: FormBuilder, public formulaire: Formulaire, public localstockage: LocalStockage, public traitement: Traitement, public keyboard: Keyboard, public diacritics: Diacritics, public inactif: Inactif) {\r\n    this.therapiesForm = formBuilder.group({\r\n      radioForm:  ['', Validators.required],\r\n      chirurgieForm:  ['', Validators.required],\r\n      gastrectomieForm:  ['', Validators.required]\r\n    });\r\n    this.anticancerForm = formBuilder.group({\r\n      traitementboolForm: ['', Validators.required]\r\n    });\r\n    this.traitementNom = [];\r\n    this.traitementElement = [];\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ngOnInit(){\r\n    //Récupération de la liste des traitements anti-cancéreux\r\n    this.traitement.makeTraitList(['TTCAN']).then((liste) =>{\r\n      this.traitementNom = liste[0];\r\n      this.traitementElement = liste[1];\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabTherapies = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cahcer le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabTherapies = true;\r\n      } else {\r\n        this.showScrollFabTherapies = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui créé deux paires nom du traitement/identifiant du traitement et la stocke dans un tableau.\r\n   * @method createTraitObjet\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  createTraitObjet(){\r\n    this.nbTraitement = this.nbTraitement+1;\r\n    interface traitementObjet {\r\n      traitementnom : string,\r\n      traitementid : string,\r\n      traitementnomControl : FormControl,\r\n      traitementidControl : FormControl\r\n    };\r\n    var traitement: traitementObjet;  \r\n    traitement = {\r\n      traitementnom: \"traitementnom_\"+this.nbTraitement.toString()+\"_Form\",\r\n      traitementid: \"traitementid_\"+this.nbTraitement.toString()+\"_Form\",\r\n      traitementnomControl : new FormControl ('', Validators.compose([ Validators.pattern('([0-9a-zA-Zéèêëàäâùüûïîöôçÿœ\\\\- \\'\\(\\)]*)'), Validators.required])),\r\n      traitementidControl : new FormControl ('', Validators.compose([ Validators.pattern('([0-9]*)')]))\r\n    }\r\n    this.anticancerTable.push(traitement);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui créé deux paires traitement choisi/nom du traitement et la stocke dans un tableau.\r\n   * @method createChoixObjet\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  createChoixObjet(){\r\n    interface choixObjet {\r\n      choixTest : boolean,\r\n      choixNom : string\r\n    };\r\n    var traitChoix: choixObjet = {\r\n      choixTest : false,\r\n      choixNom : ''\r\n    }\r\n    this.choixTable.push(traitChoix);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'ajouter un traitement.\r\n   * @method addTrait\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  addTrait() {\r\n    if (this.anticancerForm.valid){\r\n      let i: number = this.anticancerTable.length;\r\n      //Ajout d'un traitement dans le tableau\r\n      this.createTraitObjet();\r\n      this.createChoixObjet();\r\n      // add treatment to the list\r\n      this.anticancerForm.addControl(this.anticancerTable[i].traitementnom, this.anticancerTable[i].traitementnomControl);\r\n      this.anticancerForm.addControl(this.anticancerTable[i].traitementid, this.anticancerTable[i].traitementidControl);\r\n      this.checkTraitement = false;\r\n      this.submitAttempt = false;\r\n      this.showTraitementModal(i);\r\n    } else {\r\n      this.checkTraitement = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de supprimer un traitement.\r\n   * @method removeTrait\r\n   * @requires providers/localstockage - la fonction utilise la méthode removeData.\r\n   * @param {number} - le numéro du traitement à supprimer est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  removeTrait(i: number) {\r\n    // remove phyto treatment from the list\r\n    var suppressionObjet = {}\r\n    suppressionObjet[this.anticancerTable[i].traitementnom] = this.anticancerForm.value[this.anticancerTable[i].traitementnom];\r\n    suppressionObjet[this.anticancerTable[i].traitementid] = this.anticancerForm.value[this.anticancerTable[i].traitementid];\r\n    this.localstockage.removeData(suppressionObjet);\r\n    this.anticancerForm.removeControl(this.anticancerTable[i].traitementnom);\r\n    this.anticancerForm.removeControl(this.anticancerTable[i].traitementid);\r\n    this.anticancerTable.splice(i,1);\r\n    this.choixTable.splice(i,1);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet l'entrée du nom des traitements anti-cancéreux.\r\n   * @method traitementOui\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  traitementOui() {\r\n    this.isTraitement = true;\r\n    this.createTraitObjet();\r\n    this.createChoixObjet();\r\n    //Création du contenu du formulaire anticancerForm (nom et validateur)\r\n    this.anticancerForm.addControl(this.anticancerTable[0].traitementnom, this.anticancerTable[0].traitementnomControl);\r\n    this.anticancerForm.addControl(this.anticancerTable[0].traitementid, this.anticancerTable[0].traitementidControl);\r\n    this.showTraitementModal(0);\r\n    //nouvelles dimensions de la fenêtre\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabTherapies = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime l'entrée du nom des traitements anti-cancéreux.\r\n   * @method traitementNon\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  traitementNon() {\r\n    this.isTraitement = false;\r\n    let arrayLength: number = this.anticancerTable.length;\r\n    for (var i = 0; i<arrayLength;i++) {\r\n      var suppressionObjet = {}\r\n      suppressionObjet[this.anticancerTable[i].traitementnom] = this.anticancerForm.value[this.anticancerTable[i].traitementnom];\r\n      suppressionObjet[this.anticancerTable[i].traitementid] = this.anticancerForm.value[this.anticancerTable[i].traitementid];\r\n      this.localstockage.removeData(suppressionObjet);\r\n      this.anticancerForm.removeControl(this.anticancerTable[i].traitementnom);\r\n      this.anticancerForm.removeControl(this.anticancerTable[i].traitementid);\r\n    }\r\n    this.anticancerTable = [];\r\n    this.choixTable = [];\r\n    this.checkTraitement = false;\r\n    this.nbTraitement = 0;\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au champ \"Nom du traitement anti-cancéreux\" sur la page du formulaire - Therapies.\r\n   * Elle permet d'ouvrir une page modale (pages/autocomplete) qui propose, en fonction des entrées de l'utilisateur une liste de noms possibles : autocompletion.\r\n   * @method showTraitementModal\r\n   * @requires pages/autocomplete - elle appelle la page autocomplete.ts.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  showTraitementModal(i: number){\r\n    this.translate.get('TITRE_MODAL_TRAITEMENT').subscribe(value => {\r\n      this.traitementTitre = value;\r\n    });\r\n    this.translate.get('PLACEHOLDER_MODAL_TRAITEMENT').subscribe(value => {\r\n      this.traitementPlaceholder = value;\r\n    });\r\n    let modal = this.modalCtrl.create(Autocomplete, {entryAutocomplete: this.anticancerTable[i].traitementnomControl.value, dataAutocomplete: this.traitementNom, titreAutocomplete: this.traitementTitre, placeholderAutocomplete: this.traitementPlaceholder});\r\n    modal.onDidDismiss(data => {\r\n      //Vérification que la donnée passée existe et n'est pas seulement des espaces\r\n      if (data && data.replace(/\\s/g, '').length!=0){\r\n        //Récupération des données de la page autocompletion\r\n        this.choixTable[i].choixTest = true;\r\n        this.choixTable[i].choixNom = data;\r\n        //Comparaison avec la table traitement\r\n        var traitementData = this.traitementElement.find((val)=>{\r\n          let strVal = this.diacritics.replaceDiacritics(val.nom.toLowerCase());\r\n          let strData = this.diacritics.replaceDiacritics(data.toLowerCase());\r\n          if(strVal === strData){\r\n            return val;\r\n          }\r\n        });\r\n        //Attribution de valeurs aux champs du formulaire (traitementnom et traitementid)\r\n        let dataObj =  {};      \r\n        if(traitementData){\r\n          dataObj[this.anticancerTable[i].traitementnom] = traitementData.nom;\r\n          dataObj[this.anticancerTable[i].traitementid] = traitementData.id;\r\n        } else {\r\n          dataObj[this.anticancerTable[i].traitementnom] = data;\r\n          dataObj[this.anticancerTable[i].traitementid] = 0;\r\n        }\r\n        this.anticancerForm.patchValue(dataObj);\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur la page du formulaire - Therapies.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la troisième page du formulaire - Traitements Alternatifs.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    this.submitAttempt = true;\r\n    if(this.therapiesForm.valid && this.anticancerForm.valid){\r\n\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.therapiesForm.value).then((message) => {\r\n        this.localstockage.setData(this.anticancerForm.value).then((message) => {\r\n          //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n          this.localstockage.getData(\"idForm\").then((val)=> {\r\n            this.localstockage.getAllData().then((dataForm)=>{\r\n              //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n              if (val==null){\r\n                //Si le formulaire n'a pas été créé, il faut le créer\r\n                this.formulaire.createForm(dataForm);\r\n              } else {\r\n                //Sinon, il faut le mettre à jour\r\n                this.formulaire.updateForm(dataForm);\r\n              }\r\n            });\r\n          });\r\n          //Navigation à la page du formulaire - Traitements Alternatifs\r\n          this.navCtrl.push(TherapiesAlter);\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/therapies/therapies.ts","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, Content } from 'ionic-angular';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { TraitementNom } from '../traitement-nom/traitement-nom';\r\nimport { Aliments } from '../aliments/aliments';\r\n\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { Traitement } from '../../../providers/traitement';\r\nimport { TherapieValidator } from '../../../providers/validators';\r\nimport { Inactif } from '../../../providers/inactif';\r\n\r\n@Component({\r\n  selector: 'therapies-alter',\r\n  templateUrl: 'therapies-alter.html'\r\n})\r\nexport class TherapiesAlter{\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  therapiesAlterForm: FormGroup;\r\n  submitAttempt: boolean = false;\r\n  checkAutres: boolean = false;\r\n  traitementListe: any;\r\n  showScrollFabTherapiesAlter: boolean = false;\r\n  contentDimensions: any;\r\n  \r\n  constructor(public navCtrl: NavController, public zone: NgZone, translate: TranslateService, public formBuilder: FormBuilder, public formulaire: Formulaire, public traitement: Traitement, public localstockage: LocalStockage, public inactif: Inactif) {\r\n    this.therapiesAlterForm = formBuilder.group({\r\n        phytoForm: [false],\r\n        aromaForm: [false],\r\n        vitamineForm: [false],\r\n        homeoForm: [false],\r\n        aucunForm: [false],\r\n        inconnuForm: [false],\r\n        autresboolForm: [false],\r\n        autresForm: ['', Validators.pattern('([0-9a-zA-Zéèêëàäâùüûïîöôçÿ\\u0153\\\\- \\'\\(\\)]*)')]\r\n    },{ validator: TherapieValidator.isValid});\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.traitement.makeTraitList(['PHYTO']).then((liste) =>{\r\n      this.traitementListe = liste;\r\n    });\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabTherapiesAlter = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cahcer le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabTherapiesAlter = true;\r\n      } else {\r\n        this.showScrollFabTherapiesAlter = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet le déploiement d'un champ permettant d'entrer le nom d'une thérapie alternative, après que l'utilisateur ait dit avoir recours à des thérapies alternatives qui ne sont pas listées dans le formulaire.\r\n   * @method autres\r\n   * @param {id} - un identifiant css est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  autres(inputAutres){\r\n    if(this.checkAutres == false){\r\n      this.checkAutres = true;\r\n      this.therapiesAlterForm.controls.aucunForm.setValue(false);\r\n      this.therapiesAlterForm.controls.inconnuForm.setValue(false);\r\n    }else{\r\n      this.checkAutres = false;\r\n      this.therapiesAlterForm.controls.autresboolForm.setValue(false);\r\n      this.therapiesAlterForm.controls.autresForm.setValue('');\r\n      inputAutres.setFocus();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Fonction qui supprime les entrées des différentes thérapies alternatives, après que l'utilisateur ait dit ne pas avoir recours à des thérapies alternatives.\r\n   * @method aucun\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  aucun() {\r\n    this.checkAutres = false;\r\n    this.therapiesAlterForm.controls.phytoForm.setValue(false);\r\n    this.therapiesAlterForm.controls.aromaForm.setValue(false);\r\n    this.therapiesAlterForm.controls.vitamineForm.setValue(false);\r\n    this.therapiesAlterForm.controls.homeoForm.setValue(false);\r\n    this.therapiesAlterForm.controls.autresboolForm.setValue(false);\r\n    this.therapiesAlterForm.controls.autresForm.setValue('');\r\n    this.therapiesAlterForm.controls.inconnuForm.setValue(false);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime les entrées des différentes thérapies alternatives, après que l'utilisateur ait dit ne pas savoir s'il a recours à des thérapies alternatives.\r\n   * @method inconnu\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  inconnu() {\r\n    this.checkAutres = false;\r\n    this.therapiesAlterForm.controls.phytoForm.setValue(false);\r\n    this.therapiesAlterForm.controls.aromaForm.setValue(false);\r\n    this.therapiesAlterForm.controls.vitamineForm.setValue(false);\r\n    this.therapiesAlterForm.controls.homeoForm.setValue(false);\r\n    this.therapiesAlterForm.controls.autresboolForm.setValue(false);\r\n    this.therapiesAlterForm.controls.autresForm.setValue('');\r\n    this.therapiesAlterForm.controls.aucunForm.setValue(false);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime l'entrée de \"aucune\", après que l'utilisateur ait dit avoir recours à des thérapies alternatives.\r\n   * @method therapie\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  therapie() {\r\n    this.therapiesAlterForm.controls.aucunForm.setValue(false);\r\n    this.therapiesAlterForm.controls.inconnuForm.setValue(false);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur page du formulaire - Thérapies Alternatives.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la page du formulaire relative aux noms des thérapies si l'utilisateur utilise au moins une thérapie alternative - Nom des Thérapies. Sinon, elle affiche ensuite la page relative aux informations générales - Informations Générales.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    this.submitAttempt = true;\r\n    if(this.therapiesAlterForm.valid){\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.therapiesAlterForm.value).then((message) => {\r\n        //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n        this.localstockage.getData(\"idForm\").then((val)=> {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n            if (val==null){\r\n              //Si le formulaire n'a pas été créé, il faut le créer\r\n              this.formulaire.createForm(dataForm);  \r\n            } else {\r\n              //Sinon, il faut le mettre à jour\r\n              this.formulaire.updateForm(dataForm);\r\n            }\r\n          });\r\n        });\r\n        if (this.therapiesAlterForm.controls.phytoForm.value || this.therapiesAlterForm.controls.vitamineForm.value || this.therapiesAlterForm.controls.aromaForm.value) {\r\n          this.navCtrl.push(TraitementNom, {\r\n            liste : this.traitementListe\r\n          });\r\n        } else {\r\n          this.navCtrl.push(Aliments);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/therapies-alter/therapies-alter.ts","import { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, ModalController, NavParams, Content } from 'ionic-angular';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { Aliments } from '../aliments/aliments';\r\nimport{ Autocomplete } from '../../autocomplete/autocomplete';\r\n\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { Traitement } from '../../../providers/traitement';\r\nimport { Diacritics } from '../../../providers/diacritics';\r\nimport { Inactif } from '../../../providers/inactif';\r\n\r\n@Component({\r\n  selector: 'traitement-nom',\r\n  templateUrl: 'traitement-nom.html'\r\n})\r\nexport class TraitementNom implements OnInit{\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  traitementNomForm: FormGroup;\r\n  submitAttempt: boolean = false;\r\n  checkTraitement: boolean = false;\r\n  nbTraitement: number = 0;\r\n  traitementTable = [];\r\n\r\n  traitementNom: any;\r\n  traitementElement: any;\r\n  traitementTitre: string;\r\n  traitementPlaceholder: string;\r\n  liste = [];\r\n  traitementChoix = [];\r\n  showScrollFabTraitement: boolean = false;\r\n  contentDimensions: any;\r\n  \r\n  constructor(public navCtrl: NavController, public zone: NgZone, public navParams: NavParams, public modalCtrl: ModalController, public translate: TranslateService, public formBuilder: FormBuilder, public formulaire: Formulaire, public localstockage: LocalStockage, public traitement: Traitement, public diacritics: Diacritics, public inactif: Inactif) {\r\n    this.traitementNomForm = formBuilder.group({});\r\n    this.traitementNom = [];\r\n    this.traitementElement = [];\r\n    this.liste = this.navParams.get('liste');\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.createTraitObjet();\r\n    this.createChoixObjet();\r\n    this.traitementNomForm.addControl(this.traitementTable[0].phytonom, this.traitementTable[0].phytonomControl);\r\n    this.traitementNomForm.addControl(this.traitementTable[0].phytoid, this.traitementTable[0].phytoidControl);\r\n    this.traitementNom = this.liste[0];\r\n    this.traitementElement = this.liste[1];\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabTraitement = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cahcer le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabTraitement = true;\r\n      } else {\r\n        this.showScrollFabTraitement = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui créé trois paires nom du traitement/date de début du traitement/identifiant du traitement et la stocke dans un tableau.\r\n   * @method createTraitObjet\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  createTraitObjet(){\r\n    this.nbTraitement = this.nbTraitement+1;\r\n    interface traitementObjet {\r\n      phytonom : string,\r\n      phytoid : string,\r\n      phytonomControl : FormControl,\r\n      phytoidControl : FormControl\r\n    };\r\n    var phytoForm: traitementObjet;\r\n    if (this.nbTraitement == 1) {\r\n      phytoForm = {\r\n        phytonom: \"phytonom_\"+this.nbTraitement.toString()+\"_Form\",\r\n        phytoid: \"phytoid_\"+this.nbTraitement.toString()+\"_Form\",\r\n        phytonomControl : new FormControl ('', Validators.pattern('([0-9a-zA-Zéèêëàäâùüûïîöôçÿ\\u0153\\\\- \\'\\(\\)]*)')),\r\n        phytoidControl : new FormControl ('', Validators.pattern('([0-9]*)'))\r\n      }\r\n    } else {\r\n      phytoForm = {\r\n        phytonom: \"phytonom_\"+this.nbTraitement.toString()+\"_Form\",\r\n        phytoid: \"phytoid_\"+this.nbTraitement.toString()+\"_Form\",\r\n        phytonomControl : new FormControl ('', Validators.compose([ Validators.pattern('([0-9a-zA-Zéèêëàäâùüûïîöôçÿ\\u0153\\\\- \\'\\(\\)]*)'), Validators.required])),\r\n        phytoidControl : new FormControl ('', Validators.compose([ Validators.pattern('([0-9]*)'), Validators.required]))\r\n      }\r\n    }\r\n    this.traitementTable.push(phytoForm);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui créé deux paires traitement choisi/nom du traitement et la stocke dans un tableau.\r\n   * @method createChoixObjet\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  createChoixObjet(){\r\n    interface choixObjet {\r\n      choixTest : boolean,\r\n      choixNom : string\r\n    };\r\n    var phytoChoix: choixObjet = {\r\n      choixTest : false,\r\n      choixNom : ''\r\n    }\r\n    this.traitementChoix.push(phytoChoix);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'ajouter un traitement.\r\n   * @method addPhyto\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  addPhyto() {\r\n    if (this.traitementNomForm.valid){\r\n      let i: number = this.traitementTable.length;\r\n      this.createTraitObjet();\r\n      this.createChoixObjet();\r\n      // add phyto treatment to the list\r\n      this.traitementNomForm.addControl(this.traitementTable[i].phytonom, this.traitementTable[i].phytonomControl);\r\n      this.traitementNomForm.addControl(this.traitementTable[i].phytoid, this.traitementTable[i].phytoidControl);\r\n      this.checkTraitement = false;\r\n      this.submitAttempt = false;\r\n      this.showTraitementModal(i);\r\n    }else{\r\n      this.checkTraitement = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de supprimer un traitement.\r\n   * @method removePhyto\r\n   * @requires providers/localstockage - la fonction utilise la méthode removeData.\r\n   * @param {number} - le numéro du traitement à supprimer est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  removePhyto(i: number) {\r\n    // remove phyto treatment from the list\r\n    var suppressionObjet = {}\r\n    suppressionObjet[this.traitementTable[i].phytonom] = this.traitementNomForm.value[this.traitementTable[i].phytonom];\r\n    suppressionObjet[this.traitementTable[i].phytoid] = this.traitementNomForm.value[this.traitementTable[i].phytoid];\r\n    this.localstockage.removeData(suppressionObjet);\r\n    this.traitementNomForm.removeControl(this.traitementTable[i].phytonom);\r\n    this.traitementNomForm.removeControl(this.traitementTable[i].phytoid);\r\n    this.traitementTable.splice(i,1);\r\n    this.traitementChoix.splice(i,1);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au champ \"Nom du traitement\" sur la page du formulaire - Nom des Thérapies.\r\n   * Elle permet d'ouvrir une page modale (pages/autocomplete) qui propose, en fonction des entrées de l'utilisateur une liste de noms possibles : autocompletion.\r\n   * @method showTraitementModal\r\n   * @requires pages/autocomplete - elle appelle la page autocomplete.ts.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  showTraitementModal(i: number){\r\n    this.translate.get('TITRE_MODAL_TRAITEMENT_BIS').subscribe(value => {\r\n      this.traitementTitre = value;\r\n    });\r\n    this.translate.get('PLACEHOLDER_MODAL_TRAITEMENT').subscribe(value => {\r\n      this.traitementPlaceholder = value;\r\n    });\r\n    let modal = this.modalCtrl.create(Autocomplete, {entryAutocomplete: this.traitementTable[i].phytonomControl.value, dataAutocomplete: this.traitementNom, titreAutocomplete: this.traitementTitre, placeholderAutocomplete: this.traitementPlaceholder});\r\n    modal.onDidDismiss(data => {\r\n      if (data && data.replace(/\\s/g, '').length!=0){\r\n        this.traitementChoix[i].choixTest = true;\r\n        this.traitementChoix[i].choixNom = data;\r\n        var traitementData = this.traitementElement.find((val)=>{\r\n          let strVal = this.diacritics.replaceDiacritics(val.nom.toLowerCase());\r\n          let strData = this.diacritics.replaceDiacritics(data.toLowerCase());\r\n          if(strVal === strData){\r\n            return val;\r\n          }\r\n        });\r\n        let dataObj =  {};\r\n        if(traitementData){\r\n          dataObj[this.traitementTable[i].phytonom] = traitementData.nom;\r\n          dataObj[this.traitementTable[i].phytoid] = traitementData.id;\r\n        } else {\r\n          dataObj[this.traitementTable[i].phytonom] = data;\r\n          dataObj[this.traitementTable[i].phytoid] = 0;\r\n        }\r\n        this.traitementNomForm.patchValue(dataObj);\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur la page du formulaire - Nom des Thérapies.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la page des informations générales du formulaire - Informations Générales.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    this.submitAttempt = true;\r\n    if(this.traitementNomForm.valid){\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.traitementNomForm.value).then((message) => {\r\n        //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n        this.localstockage.getData(\"idForm\").then((val)=> {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n            if (val==null){\r\n              //Si le formulaire n'a pas été créé, il faut le créer\r\n              this.formulaire.createForm(dataForm);\r\n            } else {\r\n              //Sinon, il faut le mettre à jour\r\n              this.formulaire.updateForm(dataForm);\r\n            }\r\n          });\r\n        });    \r\n        //Navigation à la page du formulaire - Informations Générales\r\n        this.navCtrl.push(Aliments);\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/traitement-nom/traitement-nom.ts","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, LoadingController, Content } from 'ionic-angular';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { FinFormulaire } from '../fin-formulaire/fin-formulaire';\r\n\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { TabacValidator } from '../../../providers/validators';\r\nimport { Inactif } from '../../../providers/inactif';\r\n\r\n@Component({\r\n  selector: 'info-perso',\r\n  templateUrl: 'info-perso.html'\r\n})\r\nexport class InfoPerso{\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  infoPersoForm: FormGroup;\r\n  submitAttempt: boolean = false;\r\n  questionTabac: boolean = false;\r\n  dateNaissance: boolean = false;\r\n  contentLoader: string;\r\n  showScrollFabInfoPerso: boolean = false;\r\n  contentDimensions: any;\r\n  \r\n  constructor(public navCtrl: NavController, public zone: NgZone, public loadingCtrl: LoadingController, public translate: TranslateService, public formBuilder: FormBuilder, public formulaire: Formulaire, public localstockage: LocalStockage, public inactif: Inactif) {\r\n    this.infoPersoForm = formBuilder.group({\r\n      sexeForm: ['', Validators.required],\r\n      date_naissanceForm: ['', Validators.compose([ Validators.pattern('([0-9]{1,3})'), Validators.required])],\r\n      tabacForm: ['',Validators.required],\r\n      frequenceForm: [''],\r\n      cannabisForm: ['',Validators.required]\r\n    },{ validator: TabacValidator.isValid});\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.translate.get('CONTENT_LOADER').subscribe(value => {\r\n      this.contentLoader = value;\r\n    });\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabInfoPerso = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cahcer le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabInfoPerso = true;\r\n      } else {\r\n        this.showScrollFabInfoPerso = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de modifier la classe CSS de l'étiquette.\r\n   * @method labelBlur\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  labelBlur() {\r\n    if (this.infoPersoForm.value['date_naissanceForm'] === '') {\r\n      this.dateNaissance = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de modifier la classe CSS de l'étiquette.\r\n   * @method labelFocus\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  labelFocus() {\r\n    this.dateNaissance = true;\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet le déploiement d'un menu proposant différentes fréquences, après que l'utilisateur ait dit fumer.\r\n   * @method tabacOui\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  tabacOui() {\r\n    this.questionTabac = true;\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime le menu proposant différentes fréqences, après que l'utilisateur ait dit ne pas fumer.\r\n   * @method tabacNon\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  tabacNon() {\r\n    this.questionTabac = false;\r\n    this.infoPersoForm.controls.frequenceForm.setValue('');\r\n  }\r\n\r\n  \r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur la page du formulaire - Informations Générales.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la page de fin du formulaire - FinFormulaire.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    this.submitAttempt = true;\r\n    if(this.infoPersoForm.valid){\r\n      let loader = this.loadingCtrl.create({\r\n        content: ''\r\n      });\r\n      loader.setContent(this.contentLoader);\r\n      loader.present();\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.infoPersoForm.value).then((message) => {\r\n        //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n        this.localstockage.getData(\"idForm\").then((val)=> {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n            if (val==null){\r\n              //Si le formulaire n'a pas été créé, il faut le créer\r\n              this.formulaire.createForm(dataForm).toPromise().then((res) => {\r\n                loader.dismiss();\r\n                this.localstockage.clearData(\"idForm\");\r\n                //Navigation à la page de fin du formulaire - FinFormulaire\r\n                this.navCtrl.push(FinFormulaire, {\r\n                  succesForm : true\r\n                });\r\n              }).catch((err)=>{\r\n                console.error('ERROR', err);\r\n                this.localstockage.storeAllData(dataForm).then((res) => {\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(FinFormulaire, {\r\n                    succesForm : true\r\n                  });\r\n                }).catch((err)=>{\r\n                  console.error('ERROR', err);\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(FinFormulaire, {\r\n                    succesForm : false\r\n                  });\r\n                });\r\n              });\r\n            } else {\r\n              //Sinon, il faut le mettre à jour\r\n              this.formulaire.updateForm(dataForm).toPromise().then((res) => {\r\n                loader.dismiss();\r\n                this.localstockage.clearData(\"idForm\");\r\n                //Navigation à la page de fin du formulaire - FinFormulaire\r\n                this.navCtrl.push(FinFormulaire, {\r\n                  succesForm : true\r\n                });\r\n              }).catch((err)=>{\r\n                this.localstockage.clearData(\"idForm\");\r\n                console.error('ERROR', err);\r\n                this.localstockage.storeAllData(dataForm).then((res) => {\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(FinFormulaire, {\r\n                    succesForm : true\r\n                  });\r\n                }).catch((err)=>{\r\n                  console.error('ERROR', err);\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(FinFormulaire, {\r\n                    succesForm : false\r\n                  });\r\n                });\r\n              });\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/info-perso/info-perso.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { Accueil } from '../../accueil/accueil';\r\n\r\n@Component({\r\n  selector: 'fin-formulaire',\r\n  templateUrl: 'fin-formulaire.html'\r\n})\r\nexport class FinFormulaire {\r\n\r\n  timerCount: number = 15; //Fixe le temps avant que l'utilisateur soit redirigé vers la page d'accueil.\r\n  succesForm: boolean = true;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) { \r\n    this.succesForm = this.navParams.get('succesForm');\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.startTimer();\r\n  }\r\n    /**\r\n   * Fonction qui permet de lancer le compte à rebours.\r\n   * @method startTimer\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n    startTimer(){\r\n      setTimeout(x => {\r\n        if(this.timerCount <= 0) { \r\n          //Navigation à la page d'accueil du formulaire - Accueil\r\n          this.navCtrl.push(Accueil);\r\n        } else {\r\n          this.timerCount -= 1;\r\n          this.startTimer();\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Retourner sur la page d'accueil\" sur la page. \r\n   * Elle affiche la page d'accueil du formulaire - Accueil.\r\n   * @method nextPage\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    //Navigation à la page d'accueil du formulaire - Accueil\r\n    this.navCtrl.push(Accueil);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/fin-formulaire/fin-formulaire.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Api } from './api';\r\nimport { LocalStockage } from './localstockage';\r\n\r\n/**\r\n * @class Cancer - Ce service utilise les requêtes définies dans le fichier providers/api pour faire l'interface entre le client et le serveur (et la table Cancer).\r\n * Les réponses du serveur aux requêtes envoyées sont des objets JSON, et doivent commencer par le champ `status` : \r\n * ```json\r\n * {\r\n *   status: 'success',\r\n *   traitres: {\r\n *     // ce champ doit contenir a minima l'id du formulaire, stocké sous le nom idForm.\r\n *   }\r\n * }\r\n * ```\r\n * Si le champ `status` n'est pas un `success`, une erreur est envoyée.\r\n */\r\n\r\n@Injectable()\r\nexport class Cancer {\r\n\r\n  public subCreate: any;\r\n\r\n  constructor(public http: Http, public api: Api, public localstockage: LocalStockage) { }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête GET pour récupérer la liste des traitements enregistrés dans la base côté serveur. \r\n   * @method getCancer\r\n   * @requires providers/localstockage - la fonction utilise la méthode setData.\r\n   * @requires providers/api - la fonction utilise la méthode get.\r\n   * @param {} - aucun paramètre n'est passé à la méthode.\r\n   * @returns {Observable} - un observable est renvoyé pour suivre l'état de la requête. \r\n   */\r\n  getCancer() {\r\n    let seq = this.api.get('cancers/').share();\r\n    return seq;\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet \r\n   * @method makeCancerList\r\n   * @requires providers/cancer - elle appelle la méthode getCancer.\r\n   * @param {} - aucun paramètre n'est passé à la fonction..\r\n   * @returns {array} - un tableau avec les organes est retournée par la fonction.\r\n   */\r\n  makeCancerList(){\r\n\r\n    return new Promise((resolve,reject) => {\r\n      let organeListHemato = [];\r\n      let organeTabHemato = [];\r\n      let organeListOrgane = [];\r\n      let organeTabOrgane = [];\r\n      this.getCancer().toPromise().then((res) => {\r\n        var auxTab = res.json().data;\r\n        auxTab.forEach((element) => {\r\n          if (element.hemato) {\r\n            organeListHemato.push(element.nom.charAt(0).toUpperCase() + element.nom.slice(1).toLowerCase());\r\n            organeTabHemato.push(element);\r\n          } else {\r\n            organeListOrgane.push(element.nom.charAt(0).toUpperCase() + element.nom.slice(1).toLowerCase());\r\n            organeTabOrgane.push(element);\r\n          }\r\n        });\r\n      }).catch((err)=>{\r\n        console.error('ERROR', err);\r\n      });\r\n      resolve([organeListHemato,organeTabHemato,organeListOrgane,organeTabOrgane]);\r\n    });\r\n  } \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cancer.ts","import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, ViewChild, NgZone } from '@angular/core';\r\nimport { NavController, ModalController, LoadingController, Content } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n//page suivante\r\nimport { RefusFormulaire } from '../../formulaire/refus-formulaire/refus-formulaire';\r\n\r\n//Providers\r\nimport { Formulaire } from '../../../providers/formulaire';\r\nimport { LocalStockage } from '../../../providers/localstockage';\r\nimport { Inactif } from '../../../providers/inactif';\r\n\r\n\r\n@Component({\r\n  selector: 'raison-refus-formulaire',\r\n  templateUrl: 'raison-refus-formulaire.html'\r\n})\r\n\r\nexport class RaisonRefusFormulaire {\r\n\r\n  @ViewChild(Content) content: Content;\r\n\r\n  refusForm: FormGroup;\r\n  submitAttempt: boolean = false;\r\n  showScrollFabTherapies: boolean = false;\r\n  contentLoader: string;\r\n  showScrollFabInfoPerso: boolean = false;\r\n  contentDimensions: any;\r\n  \r\n  constructor(public navCtrl: NavController, public modalCtrl: ModalController, public zone: NgZone, public loadingCtrl: LoadingController, public localstockage: LocalStockage, public formulaire: Formulaire, public translate: TranslateService, public formBuilder: FormBuilder, public inactif: Inactif) {\r\n    this.refusForm = formBuilder.group({\r\n      raisonRefusForm:  ['', Validators.required]\r\n    });\r\n    this.contentDimensions = {};\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    //Si l'utilisateur est inactif, une alerte est envoyée avec la possibilité de continuer ou de recommencer le questionnaire.\r\n    this.inactif.idleSet(this.navCtrl);\r\n    this.translate.get('CONTENT_LOADER').subscribe(value => {\r\n      this.contentLoader = value;\r\n    });\r\n    this.contentDimensions = this.content.getContentDimensions();\r\n    if (this.contentDimensions.contentHeight + 50 < this.contentDimensions.scrollHeight) {\r\n      this.showScrollFabInfoPerso = true;\r\n    }\r\n  }\r\n\r\n  ionViewWillLeave(){\r\n    this.inactif.idleStop();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet d'afficher ou de cacher le boutton fab.\r\n   * @method displayFab\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  displayFab(){\r\n    this.zone.run(() => {\r\n      this.contentDimensions = this.content.getContentDimensions();\r\n      if (this.contentDimensions.contentHeight + 50 + this.contentDimensions.scrollTop < this.contentDimensions.scrollHeight) {\r\n        this.showScrollFabTherapies = true;\r\n      } else {\r\n        this.showScrollFabTherapies = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de scroller tout en bas du contenu.\r\n   * @method scrollDownContent\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  scrollDownContent() {\r\n    this.content.scrollToBottom();\r\n  }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Continuer\" sur la page du formulaire - Informations Générales.\r\n   * Elle valide les valeurs entrées dans les champs du formulaire et les stocke localement. \r\n   * Une fois ces valeurs stockées, elle récupère la valeur stockée correspondant à l'identificant du formulaire. \r\n   * Si aucun identifiant n'a été stocké, elle créé un nouveau formulaire avec toutes les données stockées. Sinon, elle met à jour le formulaire avec ces mêmes données.\r\n   * Elle affiche ensuite la page de fin du formulaire - FinFormulaire.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, getData, getAllData.\r\n   * @requires providers/formulaire - la fonction utilise les méthodes createForm et updateForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    this.submitAttempt = true;\r\n    if(this.refusForm.valid){\r\n      let loader = this.loadingCtrl.create({\r\n        content: ''\r\n      });\r\n      loader.setContent(this.contentLoader);\r\n      loader.present();\r\n      //Stockage local des données remplies dans cette page de formulaire\r\n      this.localstockage.setData(this.refusForm.value).then((message) => {\r\n        //Mise à jour/création du formulaire sur le serveur avec les données entrées sur cette page du formulaire\r\n        this.localstockage.getData(\"idForm\").then((val)=> {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            //il faut créer/mettre à jour le formulaire avec toutes les données stockées\r\n            if (val==null){\r\n              //Si le formulaire n'a pas été créé, il faut le créer\r\n              this.formulaire.createForm(dataForm).toPromise().then((res) => {\r\n                loader.dismiss();\r\n                this.localstockage.clearData(\"idForm\");\r\n                //Navigation à la page de fin du formulaire - FinFormulaire\r\n                this.navCtrl.push(RefusFormulaire);\r\n              }).catch((err)=>{\r\n                console.error('ERROR', err);\r\n                this.localstockage.storeAllData(dataForm).then((res) => {\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(RefusFormulaire);\r\n                }).catch((err)=>{\r\n                  console.error('ERROR', err);\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(RefusFormulaire);\r\n                });\r\n              });\r\n            } else {\r\n              //Sinon, il faut le mettre à jour\r\n              this.formulaire.updateForm(dataForm).toPromise().then((res) => {\r\n                loader.dismiss();\r\n                this.localstockage.clearData(\"idForm\");\r\n                //Navigation à la page de fin du formulaire - FinFormulaire\r\n                this.navCtrl.push(RefusFormulaire);\r\n              }).catch((err)=>{\r\n                this.localstockage.clearData(\"idForm\");\r\n                console.error('ERROR', err);\r\n                this.localstockage.storeAllData(dataForm).then((res) => {\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(RefusFormulaire);\r\n                }).catch((err)=>{\r\n                  console.error('ERROR', err);\r\n                  loader.dismiss();\r\n                  this.navCtrl.push(RefusFormulaire);\r\n                });\r\n              });\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/raison-refus-formulaire/raison-refus-formulaire.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { Accueil } from '../../accueil/accueil';\r\n\r\n@Component({\r\n  selector: 'refus-formulaire',\r\n  templateUrl: 'refus-formulaire.html'\r\n})\r\nexport class RefusFormulaire {\r\n\r\n  timerCount: number = 15; //Fixe le temps avant que l'utilisateur soit redirigé vers la page d'accueil.\r\n  succesForm: boolean = true;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {}\r\n\r\n  ngOnInit(){\r\n    this.startTimer();\r\n  }\r\n    /**\r\n   * Fonction qui permet de lancer le compte à rebours.\r\n   * @method startTimer\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n    startTimer(){\r\n      setTimeout(x => {\r\n        if(this.timerCount <= 0) { \r\n          //Navigation à la page d'accueil du formulaire - Accueil\r\n          this.navCtrl.push(Accueil);\r\n        } else {\r\n          this.timerCount -= 1;\r\n          this.startTimer();\r\n        }\r\n      }, 1000);\r\n    }\r\n\r\n  /**\r\n   * Fonction qui est liée au bouton \"Retourner sur la page d'accueil\" sur la page. \r\n   * Elle affiche la page d'accueil du formulaire - Accueil.\r\n   * @method nextPage\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    //Navigation à la page d'accueil du formulaire - Accueil\r\n    this.navCtrl.push(Accueil);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/formulaire/refus-formulaire/refus-formulaire.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Api } from './api';\r\nimport { LocalStockage } from './localstockage';\r\n\r\n/**\r\n * @class Formulaire - Ce service utilise les requêtes définies dans le fichier providers/api pour faire l'interface entre le client et le serveur.\r\n * Les réponses du serveur aux requêtes envoyées sont des objets JSON, et doivent commencer par le champ `status` : \r\n * ```json\r\n * {\r\n *   status: 'success',\r\n *   formres: {\r\n *     // ce champ doit contenir a minima l'id du formulaire, stocké sous le nom idForm.\r\n *   }\r\n * }\r\n * ```\r\n * Si le champ `status` n'est pas un `success`, une erreur est envoyée.\r\n */\r\n\r\n@Injectable()\r\nexport class Formulaire {\r\n\r\n  public subCreate: any;\r\n\r\n  constructor(public http: Http, public api: Api, public localstockage: LocalStockage) { }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête POST pour créer un nouveau formulaire côté serveur. \r\n   * La création d'un nouveau formulaire s'accompagne par la création d'un identifiant unique côté serveur, renvoyé dans la réponse du serveur.\r\n   * @method createForm\r\n   * @requires providers/localstockage - la fonction utilise les méthodes setData, removeData.\r\n   * @requires providers/api - la fonction utilise la méthode post.\r\n   * @param {Objet} - un objet est passé à la méthode qui va envoyer chacune des propriétés de l'objet au serveur.\r\n   * @returns {Observable} - un observable est renvoyé pour suivre l'état de la requête. \r\n   */\r\n  createForm(dataForm) {\r\n    //On ne peut créer qu'un seul formulaire côté serveur. Il faut s'assurer qu'il n'y a déjà pas une requête en cours lorsqu'on envoie une requête de création du formulaire.\r\n    if(this.subCreate) {\r\n       this.subCreate.unsubscribe();\r\n    }\r\n    let seq = this.api.post('newForm/', dataForm).share();\r\n    interface idObjet { idForm: number };\r\n    this.subCreate = seq.map(res => res.json())\r\n      .subscribe(res => {\r\n        // Si la requête est un succès, l'identifiant du formulaire est stocké localement\r\n        if (res.status == 'success') {\r\n          var idCreaForm: idObjet = {idForm : res.data}; // Le stockage de l'identifiant du formulaire doit avoir le nom idForm.\r\n          this.localstockage.setData(idCreaForm);\r\n          this.localstockage.removeData(dataForm);//Il faut ensuite supprimer toutes les données qui ont été enregistrées sur le serveur, sauf l'identifiant du formulaire.\r\n        }\r\n      }, err => {\r\n        console.error('ERROR', err);\r\n      });\r\n    return seq;\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête PATCH pour mettre à jour le formulaire côté serveur. \r\n   * @method updateForm\r\n   * @requires providers/localstockage - la fonction utilise la méthode removeData.\r\n   * @requires providers/api - la fonction utilise la méthode patch.\r\n   * @param {any, Objet} - une variable avec la valeur de l'identifiant du formulaire et les données à mettre à jour, sous la forme d'un objet, sont passées à la méthode.\r\n   * @returns {Observable} - un observable est renvoyé pour suivre l'état de la requête. \r\n   */\r\n  updateForm(dataForm) { \r\n    //On doit s'assurer que les données mises à jour soient mise à jour dans le bon ordre : il est préférable d'annuler toute requête déjà existante.\r\n    if(this.subCreate) {\r\n       this.subCreate.unsubscribe();\r\n    }\r\n    \r\n    let seq = this.api.patch('updateform/', dataForm).share();\r\n\r\n    this.subCreate = seq.map(res => res.json())\r\n      .subscribe(res => {\r\n        if (res.status == 'success') {\r\n          this.localstockage.removeData(dataForm);//Il faut ensuite supprimer toutes les données qui ont été enregistrées sur le serveur, sauf l'identifiant du formulaire.\r\n        }\r\n      }, err => {\r\n        console.error('ERROR', err);\r\n      });\r\n\r\n    return seq;\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête DELETE pour supprimer un formulaire côté serveur. \r\n   * @method removeForm\r\n   * @requires providers/api - la fonction utilise la méthode delete.\r\n   * @param {number} - l'identifiant du formulaire à supprimer.\r\n   * @returns {Observable} - un observable est renvoyé pour suivre l'état de la requête. \r\n   */\r\n  removeForm(idForm) { \r\n    //On doit annuler toute requête déjà existante.\r\n    if(this.subCreate) {\r\n       this.subCreate.unsubscribe();\r\n    }\r\n    \r\n    let seq = this.api.delete('removeform/' + idForm).share();\r\n\r\n    this.subCreate = seq.map(res => res.json())\r\n      .subscribe(res => {}, err => {\r\n        console.error('ERROR', err);\r\n      });\r\n\r\n    return seq;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/formulaire.ts","import {Component} from '@angular/core';\r\nimport {ViewController, LoadingController, NavParams} from 'ionic-angular';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { LocalStockage } from '../../providers/localstockage';\r\n\r\n@Component({\r\n  selector: 'center',\r\n  templateUrl: 'center.html'\r\n})\r\n\r\nexport class Center {\r\n  centerList: any;\r\n  centerModalPicked: string;\r\n  titreModalCenter: string;\r\n  centerForm: FormGroup;\r\n  contentLoader: string;\r\n  showForm: boolean = true;\r\n\r\n  constructor (public viewCtrl: ViewController, public loadingCtrl: LoadingController, public formBuilder: FormBuilder, public params: NavParams, public localstockage: LocalStockage, public translate: TranslateService) {\r\n    this.translate.get('CONTENT_LOADER_CENTER').subscribe(value => {\r\n      this.contentLoader = value;\r\n    });\r\n    this.centerList = this.params.get('centerList');\r\n    this.centerModalPicked = this.params.get('centerModalPicked');\r\n    this.titreModalCenter = this.params.get('titreModalCenter');\r\n    this.centerForm = formBuilder.group({\r\n      setCenter:  [this.centerModalPicked]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime la page modale ouverte.\r\n   * @method dismiss\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  dismiss() {\r\n    this.showForm = false;\r\n    this.localstockage.setData(this.centerForm.value).then((message) => {\r\n      this.viewCtrl.dismiss();\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/center/center.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","//Modules auto-générés à la création de l'application \r\nimport { NgModule, ErrorHandler, Injectable, Injector } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule, Http } from '@angular/http';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\n\r\nimport { MyApp } from './app.component';\r\n\r\n//Modules importés\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { NgIdleModule } from '@ng-idle/core';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n// The translate loader needs to know where to load i18n files in Ionic's static asset pipeline.\r\nexport function HttpLoaderFactory(http: Http) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n//Pages créées pour l'application\r\nimport { Accueil } from '../pages/accueil/accueil';\r\nimport { Maladie } from '../pages/formulaire/maladie/maladie';\r\nimport { Therapies } from '../pages/formulaire/therapies/therapies';\r\nimport { TherapiesAlter } from '../pages/formulaire/therapies-alter/therapies-alter';\r\nimport { TraitementNom } from '../pages/formulaire/traitement-nom/traitement-nom';\r\nimport { Aliments } from '../pages/formulaire/aliments/aliments';\r\nimport { InfoPerso } from '../pages/formulaire/info-perso/info-perso';\r\nimport { FinFormulaire } from '../pages/formulaire/fin-formulaire/fin-formulaire';\r\nimport { RaisonRefusFormulaire } from '../pages/formulaire/raison-refus-formulaire/raison-refus-formulaire';\r\nimport { RefusFormulaire } from '../pages/formulaire/refus-formulaire/refus-formulaire';\r\nimport { Autocomplete } from '../pages/autocomplete/autocomplete';\r\nimport { Center } from '../pages/center/center';\r\n\r\n//Modules créés pour l'application (providers)\r\nimport { Api } from '../providers/api';\r\nimport { Inactif } from '../providers/inactif';\r\nimport { Formulaire } from '../providers/formulaire';\r\nimport { LocalStockage } from '../providers/localstockage';\r\nimport { Diacritics } from '../providers/diacritics';\r\nimport { Traitement } from '../providers/traitement';\r\nimport { Cancer } from '../providers/cancer';\r\nimport { TherapieValidator } from '../providers/validators';\r\n\r\n// Module importé pour Pro Client avec Monitoring & Deploy,\r\nimport { Pro } from '@ionic/pro';\r\n\r\nPro.init('0176cb0d', {\r\n  appVersion: '0.0.1'\r\n})\r\n\r\n@Injectable()\r\nexport class MyErrorHandler implements ErrorHandler {\r\n  ionicErrorHandler: IonicErrorHandler;\r\n\r\n  constructor(injector: Injector) {\r\n    try {\r\n      this.ionicErrorHandler = injector.get(IonicErrorHandler);\r\n    } catch(e) {\r\n      // Unable to get the IonicErrorHandler provider, ensure\r\n      // IonicErrorHandler has been added to the providers list below\r\n    }\r\n  }\r\n\r\n  handleError(err: any): void {\r\n    Pro.monitoring.handleNewError(err);\r\n    // Remove this if you want to disable Ionic's auto exception handling\r\n    // in development mode.\r\n    this.ionicErrorHandler && this.ionicErrorHandler.handleError(err);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    Accueil,\r\n    Maladie,\r\n    Therapies,\r\n    TherapiesAlter,\r\n    TraitementNom,\r\n    Aliments,\r\n    InfoPerso,\r\n    FinFormulaire,\r\n    RaisonRefusFormulaire,\r\n    RefusFormulaire,\r\n    Autocomplete,\r\n    Center\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [Http]\r\n      }\r\n    }),\r\n    NgIdleModule.forRoot(),\r\n    IonicModule.forRoot(MyApp),\r\n    IonicStorageModule.forRoot()\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    Accueil,\r\n    Maladie,\r\n    Therapies,\r\n    TherapiesAlter,\r\n    TraitementNom,\r\n    Aliments,\r\n    InfoPerso,\r\n    FinFormulaire,\r\n    RaisonRefusFormulaire,\r\n    RefusFormulaire,\r\n    Autocomplete,\r\n    Center\r\n  ],\r\n  providers: [\r\n    Api,\r\n    Inactif,\r\n    Formulaire,\r\n    LocalStockage,\r\n    Diacritics,\r\n    Traitement,\r\n    Cancer,\r\n    TherapieValidator,\r\n    SplashScreen,\r\n    StatusBar,\r\n    Keyboard,\r\n    Geolocation,\r\n    IonicErrorHandler,\r\n    [{ provide: ErrorHandler, useClass: MyErrorHandler }]\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component} from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\n\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Storage } from '@ionic/storage';\r\n\r\nimport { Accueil } from '../pages/accueil/accueil';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  template: `<ion-nav [root]=\"rootPage\"></ion-nav>`\r\n})\r\nexport class MyApp {\r\n  rootPage = Accueil;\r\n\r\n  constructor(private translate: TranslateService, private platform: Platform, private statusBar: StatusBar, private splashScreen: SplashScreen, private storage: Storage) {\r\n    this.initTranslate();\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.platform.ready().then(() => {\r\n      this.storage.ready().then(()=>{\r\n        this.statusBar.styleDefault();\r\n        //this.splashScreen.hide();\r\n      });\r\n    });\r\n  }\r\n\r\n  initTranslate() {\r\n    // Set the default language for translation strings, and the current language.\r\n    this.translate.setDefaultLang('fr');\r\n\r\n    if (this.translate.getBrowserLang() !== undefined) {\r\n      this.translate.use(this.translate.getBrowserLang());\r\n    } else {\r\n      this.translate.use('fr'); // Set your language here\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport {Idle, DEFAULT_INTERRUPTSOURCES} from '@ng-idle/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlertController } from 'ionic-angular';\r\n\r\nimport { Formulaire } from './formulaire';\r\nimport { LocalStockage } from './localstockage';\r\n\r\n/**\r\n * @class Inactif - Ce service permet de vérifier si l'utilisateur est actif ou pas, et le cas échéant de le renvoyer vers la page d'accueil du formulaire.\r\n */\r\n\r\n@Injectable()\r\nexport class Inactif {\r\n\r\n  idleCount: number = 60; //Fixe le temps avant que l'utilisateur, une fois inactif, soit redirigé vers la page d'accueil.\r\n  idleState: any;\r\n\r\n  constructor(public alertCtrl: AlertController, public translate: TranslateService, private idle: Idle, public localstockage: LocalStockage, public formulaire: Formulaire) {\r\n    // Temps à partir duquel on estime que l'utilisateur est inactif.\r\n    idle.setIdle(1000);\r\n    // Actions qui terminent l'inactivité.\r\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui lance la détection de l'inactivité de l'utilisateur, et qui, une fois l'inactivité détectée, ouvre une fenêtre d'alerte. \r\n   * @method idleSet\r\n   * @requires providers/inactif - la fonction utilise la méthode idleRedirectConfirm.\r\n   * @param {Controller, Controller} - les deux controlleurs, qui correspondent à la page sur laquelle l'utilisateur est présent et à la fenêtre d'alerte sont passées à la méthode.\r\n   * @returns {} - aucune valeur n'est retournée par la méthode.\r\n   */\r\n  idleSet(navCtrl) {\r\n    this.idle.watch();\r\n    this.idleState = this.idle.onIdleStart.subscribe(()=>{\r\n      this.idleRedirectConfirm(navCtrl);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Méthode qui arrête la détection de l'inactivité de l'utilisateur. \r\n   * @method idleStop\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la méthode.\r\n   */\r\n  idleStop() {\r\n    this.idleState.unsubscribe();\r\n    this.idle.stop();\r\n    this.idle.ngOnDestroy();\r\n  }\r\n\r\n  /**\r\n   * Méthode qui lance un timer.\r\n   * @method idleTimer\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {Observable} - un observable est renvoyé pour suivre l'état du timer.\r\n   */\r\n  idleTimer(){  \r\n    return Observable.timer(0,1000);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui ouvre une fenêtre d'alerte pour informer à l'utilisateur qu'il est inactif. \r\n   * L'utilisateur peut soit confirmer la redirection vers la redirection vers la page d'accueil, soit l'annuler, soit attendre qu'il soit redirigé au terme d'un compte à rebours.\r\n   * La redirection s'accompagne d'une suppression de toutes les données stockées localement.\r\n   * @method idleRedirectConfirm\r\n   * @requires providers/inactif - la fonction utilise la méthode idleSet, idleTimer.\r\n   * @requires providers/localstockage - la fonction utilise la méthode clearAllData.\r\n   * @param {Controller, Controller} - les deux controlleurs, qui correspondent à la page sur laquelle l'utilisateur est présent et à la fenêtre d'alerte sont passées à la méthode.\r\n   * @returns {} - aucune valeur n'est retournée par la méthode.\r\n   */\r\n  idleRedirectConfirm(navCtrl) {\r\n    //Arrêt de la détection de l'inactivité de l'utilisateur\r\n    this.idleState.unsubscribe();\r\n    this.idle.stop();\r\n\r\n    //Création de la fenêtre d'alerte\r\n    let buttonTextConfirm: string;\r\n    let buttonTextCancel: string;\r\n    this.translate.get('BOUTON_CONFIRM_ALERTE').subscribe(value => {\r\n      buttonTextConfirm = value;\r\n    });\r\n    this.translate.get('BOUTON_ANNUL_ALERTE').subscribe(value => {\r\n      buttonTextCancel = value;\r\n    });\r\n\r\n    let alert = this.alertCtrl.create({\r\n      title: '',\r\n      subTitle: '',\r\n      message: '',\r\n      cssClass: 'idleCss',\r\n      buttons: [\r\n        {\r\n          text: buttonTextConfirm,\r\n          handler: () =>{ \r\n            timer.unsubscribe();\r\n            alert.dismiss().then(() => {\r\n              this.localstockage.getData(\"idForm\").then((val)=> {\r\n                if (val!==null){\r\n                  this.formulaire.removeForm(val);\r\n                }\r\n              });\r\n              navCtrl.popToRoot();\r\n            });\r\n            return false;//La fermeture de l'alerte est faite manuellement, par alert.dismiss(), une fois la suppression des données effectuées.\r\n          }\r\n        },\r\n        {\r\n          text: buttonTextCancel,\r\n          role: 'cancel',\r\n          handler: () =>{\r\n            //Relance de la détection de l'inactivité de l'utilisateur\r\n            timer.unsubscribe();\r\n            alert.dismiss().then(() => {\r\n              this.idleSet(navCtrl);\r\n            });\r\n            return false;//La fermeture de l'alerte est faite manuellement, par alert.dismiss(), une fois la suppression des données effectuées.\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    let titre: string;\r\n    let message: string;\r\n    this.translate.get('TITRE_ALERTE').subscribe(value => {\r\n      titre = value;\r\n    });\r\n    this.translate.get('MESSAGE_ALERTE').subscribe(value => {\r\n      message = value;\r\n    });\r\n    alert.setTitle(titre);\r\n    alert.setMessage(message);\r\n    //Création d'un compte à rebours qui, une fois à zéro, redirige l'utilisateur vers la page d'accueil du formulaire\r\n    let timer = this.idleTimer().subscribe((t)=>{\r\n      let count = this.idleCount-t;\r\n      if (count>=0){\r\n        let sousTitrePrinc: string;\r\n        let sousTitreUnit: string;\r\n        this.translate.get('SOUSTITRE_ALERTE').subscribe(value => {\r\n          sousTitrePrinc = value;\r\n        });\r\n        this.translate.get('SOUSTITRE_UNIT_ALERTE').subscribe(value => {\r\n          sousTitreUnit = value;\r\n        });\r\n        alert.setSubTitle(sousTitrePrinc + count + sousTitreUnit);\r\n      } else {\r\n        timer.unsubscribe();\r\n        alert.dismiss().then(() => {\r\n          this.localstockage.getData(\"idForm\").then((val)=> {\r\n            if (val!==null){\r\n              this.formulaire.removeForm(val);\r\n            }\r\n          });\r\n          navCtrl.popToRoot();\r\n        });\r\n      }\r\n    });\r\n    \r\n    alert.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/inactif.ts","import { Injectable } from '@angular/core';\r\n\r\n\r\n/**\r\n * @class Diacritics - Ce service recence l'ensemble des caractères spéciaux qui peuvent être remplacés par des caractères simples lors d'une saisie de l'utilisateur.\r\n * Il facilite la comparaison entre les données saisies et celles attendues, notamment lors de l'autocompletion.\r\n */\r\n\r\n@Injectable()\r\nexport class Diacritics {\r\n  \r\n  defaultDiacritics = [];\r\n\r\n  constructor() {\r\n    this.defaultDiacritics = [\r\n      {'base':'A', 'letters':/[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g},\r\n      {'base':'AA','letters':/[\\uA732]/g},\r\n      {'base':'AE','letters':/[\\u00C6\\u01FC\\u01E2]/g},\r\n      {'base':'AO','letters':/[\\uA734]/g},\r\n      {'base':'AU','letters':/[\\uA736]/g},\r\n      {'base':'AV','letters':/[\\uA738\\uA73A]/g},\r\n      {'base':'AY','letters':/[\\uA73C]/g},\r\n      {'base':'B', 'letters':/[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g},\r\n      {'base':'C', 'letters':/[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g},\r\n      {'base':'D', 'letters':/[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g},\r\n      {'base':'DZ','letters':/[\\u01F1\\u01C4]/g},\r\n      {'base':'Dz','letters':/[\\u01F2\\u01C5]/g},\r\n      {'base':'E', 'letters':/[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g},\r\n      {'base':'F', 'letters':/[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g},\r\n      {'base':'G', 'letters':/[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g},\r\n      {'base':'H', 'letters':/[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g},\r\n      {'base':'I', 'letters':/[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g},\r\n      {'base':'J', 'letters':/[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g},\r\n      {'base':'K', 'letters':/[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g},\r\n      {'base':'L', 'letters':/[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g},\r\n      {'base':'LJ','letters':/[\\u01C7]/g},\r\n      {'base':'Lj','letters':/[\\u01C8]/g},\r\n      {'base':'M', 'letters':/[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g},\r\n      {'base':'N', 'letters':/[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g},\r\n      {'base':'NJ','letters':/[\\u01CA]/g},\r\n      {'base':'Nj','letters':/[\\u01CB]/g},\r\n      {'base':'O', 'letters':/[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g},\r\n      {'base':'OI','letters':/[\\u01A2]/g},\r\n      {'base':'OO','letters':/[\\uA74E]/g},\r\n      {'base':'OU','letters':/[\\u0222]/g},\r\n      {'base':'P', 'letters':/[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g},\r\n      {'base':'Q', 'letters':/[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g},\r\n      {'base':'R', 'letters':/[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g},\r\n      {'base':'S', 'letters':/[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g},\r\n      {'base':'T', 'letters':/[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g},\r\n      {'base':'TZ','letters':/[\\uA728]/g},\r\n      {'base':'U', 'letters':/[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g},\r\n      {'base':'V', 'letters':/[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g},\r\n      {'base':'VY','letters':/[\\uA760]/g},\r\n      {'base':'W', 'letters':/[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g},\r\n      {'base':'X', 'letters':/[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g},\r\n      {'base':'Y', 'letters':/[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g},\r\n      {'base':'Z', 'letters':/[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g},\r\n      {'base':'a', 'letters':/[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g},\r\n      {'base':'aa','letters':/[\\uA733]/g},\r\n      {'base':'ae','letters':/[\\u00E6\\u01FD\\u01E3]/g},\r\n      {'base':'ao','letters':/[\\uA735]/g},\r\n      {'base':'au','letters':/[\\uA737]/g},\r\n      {'base':'av','letters':/[\\uA739\\uA73B]/g},\r\n      {'base':'ay','letters':/[\\uA73D]/g},\r\n      {'base':'b', 'letters':/[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g},\r\n      {'base':'c', 'letters':/[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g},\r\n      {'base':'d', 'letters':/[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g},\r\n      {'base':'dz','letters':/[\\u01F3\\u01C6]/g},\r\n      {'base':'e', 'letters':/[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g},\r\n      {'base':'f', 'letters':/[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g},\r\n      {'base':'g', 'letters':/[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g},\r\n      {'base':'h', 'letters':/[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g},\r\n      {'base':'hv','letters':/[\\u0195]/g},\r\n      {'base':'i', 'letters':/[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g},\r\n      {'base':'j', 'letters':/[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g},\r\n      {'base':'k', 'letters':/[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g},\r\n      {'base':'l', 'letters':/[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g},\r\n      {'base':'lj','letters':/[\\u01C9]/g},\r\n      {'base':'m', 'letters':/[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g},\r\n      {'base':'n', 'letters':/[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g},\r\n      {'base':'nj','letters':/[\\u01CC]/g},\r\n      {'base':'o', 'letters':/[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g},\r\n      {'base':'oi','letters':/[\\u01A3]/g},\r\n      {'base':'ou','letters':/[\\u0223]/g},\r\n      {'base':'oo','letters':/[\\uA74F]/g},\r\n      {'base':'p','letters':/[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g},\r\n      {'base':'q','letters':/[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g},\r\n      {'base':'r','letters':/[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g},\r\n      {'base':'s','letters':/[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g},\r\n      {'base':'t','letters':/[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g},\r\n      {'base':'tz','letters':/[\\uA729]/g},\r\n      {'base':'u','letters':/[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g},\r\n      {'base':'v','letters':/[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g},\r\n      {'base':'vy','letters':/[\\uA761]/g},\r\n      {'base':'w','letters':/[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g},\r\n      {'base':'x','letters':/[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g},\r\n      {'base':'y','letters':/[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g},\r\n      {'base':'z','letters':/[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g}\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie remplace l'ensemble des caractères spéciaux par leurs équivalents plus simples.\r\n   * @method replaceDiacritics\r\n   * @param {string} - une chaîne de caractère est passé à la méthode.\r\n   * @returns {string} - une chaîne de caractère est renvoyée, dans laquelle tous les caractères spéciaux ont été remplacés.\r\n   */\r\n  replaceDiacritics(strVal) {\r\n    for(var i=0; i<this.defaultDiacritics.length; i++) {\r\n      strVal = strVal.replace(this.defaultDiacritics[i].letters, this.defaultDiacritics[i].base);\r\n    }\r\n    return strVal;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/diacritics.ts","import { Component } from '@angular/core';\r\nimport { NavController, ModalController } from 'ionic-angular';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n//page suivante\r\nimport { Maladie } from '../formulaire/maladie/maladie';\r\nimport { RaisonRefusFormulaire } from '../formulaire/raison-refus-formulaire/raison-refus-formulaire';\r\n\r\n//page center\r\nimport{ Center } from '../center/center';\r\n\r\n//providers\r\nimport { Formulaire } from '../../providers/formulaire';\r\nimport { LocalStockage } from '../../providers/localstockage';\r\n\r\n@Component({\r\n  selector: 'accueil',\r\n  templateUrl: 'accueil.html'\r\n})\r\nexport class Accueil {\r\n\r\n  constructor(public navCtrl: NavController, public modalCtrl: ModalController, public translate: TranslateService, public formulaire: Formulaire, public localstockage: LocalStockage, private geolocation: Geolocation) {}\r\n  \r\n  /**\r\n   * Fonction qui permet de fixer le centre.\r\n   * Elle ouvre une page modale pour sélectionner le centre.\r\n   * Une fois la valeur choisie, elle la stocke localement.\r\n   * @method setCenter\r\n   * @requires providers/localstockage - la fonction utilise la méthode setData.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  setCenter() {\r\n    this.localstockage.getData(\"setCenter\").then((val)=> {\r\n      let center1: string;\r\n      let center2: string;\r\n      let center3: string;\r\n      let center4: string;\r\n      let center5: string;\r\n      let center6: string;\r\n      let center7: string;\r\n      let center8: string;\r\n      let center9: string;\r\n      let center10: string;\r\n      let center11: string;\r\n      let center12: string;\r\n      let center13: string;\r\n      let center14: string;\r\n      let titreCenter: string;\r\n      let centerPicked: string;\r\n      if (val==null){\r\n        centerPicked = '';\r\n      } else {\r\n        centerPicked = val;\r\n      }\r\n      this.translate.get('OPTION_CENTER_1').subscribe(value => {\r\n        center1 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_2').subscribe(value => {\r\n        center2 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_3').subscribe(value => {\r\n        center3 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_4').subscribe(value => {\r\n        center4 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_5').subscribe(value => {\r\n        center5 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_6').subscribe(value => {\r\n        center6 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_7').subscribe(value => {\r\n        center7 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_8').subscribe(value => {\r\n        center8 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_9').subscribe(value => {\r\n        center9 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_10').subscribe(value => {\r\n        center10 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_11').subscribe(value => {\r\n        center11 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_12').subscribe(value => {\r\n        center12 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_13').subscribe(value => {\r\n        center13 = value;\r\n      });\r\n      this.translate.get('OPTION_CENTER_14').subscribe(value => {\r\n        center14 = value;\r\n      });\r\n      this.translate.get('TITRE_MODAL_CENTER').subscribe(value => {\r\n        titreCenter = value;\r\n      });\r\n      let centerModal = this.modalCtrl.create(Center,{centerList: [center1, center2, center3, center4, center5, center6, center7, center8, center9, center10, center11, center12, center13, center14], titreModalCenter: titreCenter, centerModalPicked: centerPicked});\r\n      //Affichage de la page du choix du centre\r\n      centerModal.present();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction appelée lors du clic sur le bouton \"Commencer le formulaire\" sur la page d'accueil.\r\n   * Elle récupère la date et l'heure au moment où le bouton est cliqué et stocke cette valeur localement.\r\n   * Une fois cette valeur stockée, elle crée un nouveau formulaire et affiche la première page du formulaire - Données Personnelles.\r\n   * @method nextPage\r\n   * @requires providers/localstockage - la fonction utilise la méthode setData.\r\n   * @requires providers/formulaire - la fonction utilise la méthode createForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  nextPage() {\r\n    //Coordonnées GPS du patient\r\n    interface coordObjet {latitudeForm: Number, longitudeForm: Number};\r\n    var coordForm: coordObjet = {latitudeForm : null, longitudeForm : null};\r\n\r\n    //Récupération des coordonnées GPS du device\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      coordForm.latitudeForm = resp.coords.latitude;\r\n      coordForm.longitudeForm = resp.coords.longitude;\r\n      //Enregistrement des données (coordonnées GPS) localement\r\n      this.localstockage.setData(coordForm);\r\n    }).catch((error) => {\r\n       console.log('Error getting location', error);\r\n    });\r\n\r\n    //Suppression du serveur des formulaires qui n'ont pas été terminés\r\n    this.localstockage.getData(\"idForm\").then((val)=> {\r\n      if (val!==null){\r\n        this.formulaire.removeForm(val);\r\n      }\r\n    });\r\n\r\n    //Stockage local de la date de création du nouveau formulaire après avoir supprimer toutes les données déjà stockées\r\n    //Suppression des données stockées localement qui n'ont pas été envoyées sur le serveur et dont le formulaire est considéré comme non terminé\r\n    this.localstockage.clearAllData().then(()=>{\r\n      //Récupération des formulaires terminés mais non envoyés sur le serveur\r\n      this.localstockage.getStoreData().then((dataStore) => {\r\n        for(var propertyName in dataStore) {\r\n          let data = JSON.parse(dataStore[propertyName]);\r\n          //Si l'identifiant du formulaire (ideForm) n'existe pas, le formulaire n'a pas été créé côté serveur\r\n          if(data.idForm == null){\r\n            //Dans ce cas, il faut le créer côté serveur\r\n            this.formulaire.createForm(data).toPromise().then((res) => {\r\n              //Suppression du formulaire qui vient d'être envoyé sur le serveur\r\n              this.localstockage.clearData(propertyName);\r\n            }).catch((err)=>{\r\n              console.error('ERROR', err);\r\n            });\r\n          //Si l'identifiant du formulaire (idForm) existe, le formulaire a été créé côté serveur\r\n          } else {\r\n            //Dans ce cas, il faut le mettre à jour côté serveur\r\n            this.formulaire.updateForm(data).toPromise().then((res) => {\r\n              //Suppression du formulaire qui vient d'être envoyé sur le serveur\r\n              this.localstockage.clearData(propertyName);\r\n            }).catch((err)=>{\r\n              console.error('ERROR', err);\r\n            });\r\n          }\r\n          break;\r\n        }\r\n      });\r\n      //Date de création du nouveau formulaire\r\n      interface dateObjet { dateForm: Date, accordForm: Boolean, centerForm: string};\r\n      var currentTime = new Date();\r\n      var dateCreaForm: dateObjet;\r\n      this.localstockage.getData(\"setCenter\").then((val)=> {\r\n        dateCreaForm = {dateForm : currentTime, accordForm : true, centerForm: val};\r\n        //Création du formulaire\r\n        this.localstockage.setData(dateCreaForm).then((message) => {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            this.formulaire.createForm(dataForm);\r\n          });\r\n        });\r\n      });\r\n      \r\n      //Navigation à la page du formulaire - Maladie\r\n      this.navCtrl.push(Maladie);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction appelée lors du clic sur le bouton \"Refuser le formulaire\" sur la page d'accueil.\r\n   * Elle récupère la date et l'heure au moment où le bouton est cliqué et stocke cette valeur localement.\r\n   * Une fois cette valeur stockée, elle crée un nouveau formulaire et affiche la page du formulaire - Refus formulaire.\r\n   * @method refusPage\r\n   * @requires providers/localstockage - la fonction utilise la méthode setData.\r\n   * @requires providers/formulaire - la fonction utilise la méthode createForm.\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  refusPage() {\r\n    //Coordonnées GPS du patient\r\n    interface coordObjet {latitudeForm: Number, longitudeForm: Number};\r\n    var coordForm: coordObjet = {latitudeForm : null, longitudeForm : null};\r\n\r\n    //Récupération des coordonnées GPS du device\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      coordForm.latitudeForm = resp.coords.latitude;\r\n      coordForm.longitudeForm = resp.coords.longitude;\r\n      //Enregistrement des données (coordonnées GPS) localement\r\n      this.localstockage.setData(coordForm);\r\n    }).catch((error) => {\r\n       console.log('Error getting location', error);\r\n    });\r\n\r\n    //Suppression du serveur des formulaires qui n'ont pas été terminés\r\n    this.localstockage.getData(\"idForm\").then((val)=> {\r\n      if (val!==null){\r\n        this.formulaire.removeForm(val);\r\n      }\r\n    });\r\n\r\n    //Stockage local de la date de création du nouveau formulaire après avoir supprimer toutes les données déjà stockées\r\n    //Suppression des données stockées localement qui n'ont pas été envoyées sur le serveur et dont le formulaire est considéré comme non terminé\r\n    this.localstockage.clearAllData().then(()=>{\r\n      //Récupération des formulaires terminés mais non envoyés sur le serveur\r\n      this.localstockage.getStoreData().then((dataStore) => {\r\n        for(var propertyName in dataStore) {\r\n          let data = JSON.parse(dataStore[propertyName]);\r\n          //Si l'identifiant du formulaire (ideForm) n'existe pas, le formulaire n'a pas été créé côté serveur\r\n          if(data.idForm == null){\r\n            //Dans ce cas, il faut le créer côté serveur\r\n            this.formulaire.createForm(data).toPromise().then((res) => {\r\n              //Suppression du formulaire qui vient d'être envoyé sur le serveur\r\n              this.localstockage.clearData(propertyName);\r\n            }).catch((err)=>{\r\n              console.error('ERROR', err);\r\n            });\r\n          //Si l'identifiant du formulaire (idForm) existe, le formulaire a été créé côté serveur\r\n          } else {\r\n            //Dans ce cas, il faut le mettre à jour côté serveur\r\n            this.formulaire.updateForm(data).toPromise().then((res) => {\r\n              //Suppression du formulaire qui vient d'être envoyé sur le serveur\r\n              this.localstockage.clearData(propertyName);\r\n            }).catch((err)=>{\r\n              console.error('ERROR', err);\r\n            });\r\n          }\r\n          break;\r\n        }\r\n      });\r\n\r\n      //Date de création du nouveau formulaire\r\n      interface dateObjet { dateForm: Date, accordForm: Boolean, centerForm: string};\r\n      var currentTime = new Date();\r\n      var dateCreaForm: dateObjet;\r\n      this.localstockage.getData(\"setCenter\").then((val)=> {\r\n        dateCreaForm = {dateForm : currentTime, accordForm : true, centerForm: val};\r\n        //Création du formulaire\r\n        this.localstockage.setData(dateCreaForm).then((message) => {\r\n          this.localstockage.getAllData().then((dataForm)=>{\r\n            this.formulaire.createForm(dataForm);\r\n          });\r\n        });\r\n      });\r\n\r\n      //Navigation à la page du formulaire - Refus formulaire\r\n      this.navCtrl.push(RaisonRefusFormulaire);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/accueil/accueil.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n/**\r\n * @class Api - Ce service prend en charge les requêtes vers l'API REST côté client. Il faut, avant toute chose, déterminer l'URL de l'API.\r\n * Les données échangées doivent être en format JSON. Les données reçues doivent toujours commencer par le champ 'status' :\r\n * ```json\r\n * {\r\n *   status: 'success',\r\n *   formres: {\r\n *     // ce champ doit contenir a minima l'id du formulaire, stocké sous le nom idForm\r\n *   }\r\n * }\r\n * ```\r\n * Si le champ `status` n'est pas un `success`, une erreur est envoyée.\r\n */\r\n\r\n@Injectable()\r\nexport class Api {\r\n  \r\n  url: string = 'http://51.255.38.12/api/v1';\r\n\r\n  constructor(public http: Http) {}\r\n\r\n  /**\r\n   * Méthode qui envoie une requête GET à l'API pour récupérer des données. \r\n   * @method get\r\n   */\r\n  get(endpoint: string, params?: any, options?: RequestOptions) {\r\n    if (!options) {\r\n      options = new RequestOptions();\r\n    }\r\n\r\n    // Support easy query params for GET requests\r\n    if (params) {\r\n      let p = new URLSearchParams();\r\n      for (let k in params) {\r\n        p.set(k, params[k]);\r\n      }\r\n      // Set the search field if we have params and don't already have\r\n      // a search field set in options.\r\n      options.search = !options.search && p || options.search;\r\n    }\r\n\r\n    return this.http.get(this.url + '/' + endpoint, options);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête POST à l'API pour envoyer des données sur le serveur. \r\n   * Cette méthode est utilisée lorsque l'URI pour accéder à la ressource n'est pas encore créée et sera créée côté serveur. Les données envoyées seront donc dans un sous-domaine de l'URI utilisée pour envoyer les données.\r\n   * @method post\r\n   */\r\n  post(endpoint: string, body: any, options?: RequestOptions) {\r\n    return this.http.post(this.url + '/' + endpoint, body, options);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête PUT à l'API pour envoyer des données sur le serveur. \r\n   * Cette méthode est utilisée lorsque l'URI pour accéder à la ressource est déterminée par le client : c'est l'URI utilisée pour envoyer les données.\r\n   * @method put\r\n   */\r\n  put(endpoint: string, body: any, options?: RequestOptions) {\r\n    return this.http.put(this.url + '/' + endpoint, body, options);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête DELETE à l'API pour supprimer des données sur le serveur.\r\n   * @method delete\r\n   */\r\n  delete(endpoint: string, options?: RequestOptions) {\r\n    return this.http.delete(this.url + '/' + endpoint, options);\r\n  }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête PATCH à l'API pour envoyer des données sur le serveur. \r\n   * Cette méthode est utilisée lorsque les données envoyées sont une mise à jour d'une ressource déjà identifiée. Les données correspondent donc à un format attendu.\r\n   * @method patch\r\n   */\r\n  patch(endpoint: string, body: any, options?: RequestOptions) {\r\n    return this.http.patch(this.url + '/' + endpoint, body, options);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api.ts","import { FormGroup } from '@angular/forms';\r\n\r\nexport class TherapieValidator {\r\n  static isValid(group: FormGroup): any {\r\n    var phytoForm = group.controls.phytoForm.value;\r\n    var aromaForm = group.controls.aromaForm.value;\r\n    var vitamineForm = group.controls.vitamineForm.value;\r\n    var homeoForm = group.controls.homeoForm.value;\r\n    var aucunForm = group.controls.aucunForm.value;\r\n    var inconnuForm = group.controls.inconnuForm.value;\r\n    var autresboolForm = group.controls.autresboolForm.value;\r\n    var autresForm = group.controls.autresForm.value;\r\n    if (autresboolForm && autresForm==''){\r\n      group.controls.autresForm.setErrors({\"autres_empty\": true});\r\n    }\r\n    if (!phytoForm && !aromaForm && !vitamineForm && !homeoForm && !autresboolForm && !aucunForm && !inconnuForm){\r\n      return {\r\n          \"empty\": true\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport class TabacValidator {\r\n  static isValid(group: FormGroup): any {\r\n    var tabacForm = group.controls.tabacForm.value;\r\n    var frequenceForm = group.controls.frequenceForm.value;\r\n    if (tabacForm=='oui' && frequenceForm==''){\r\n      group.controls.frequenceForm.setErrors({\"empty\": true});\r\n    }\r\n  }\r\n}\r\n\r\nexport class MaladieValidator {\r\n  static isValid(group: FormGroup): any {\r\n    var typeboolForm = group.controls.typeboolForm.value;\r\n    var organeboolForm = group.controls.organeboolForm.value;\r\n    var nom_organeForm = group.controls.nom_organeForm.value;\r\n    var etatForm = group.controls.etatForm.value;\r\n    if (typeboolForm == 'non' || typeboolForm == 'je ne sais pas') {\r\n      if (organeboolForm == '') {\r\n        group.controls.organeboolForm.setErrors({\"empty\": true});\r\n      } else if (organeboolForm =='oui'  && nom_organeForm=='') {\r\n        group.controls.nom_organeForm.setErrors({\"empty\": true});\r\n      }\r\n      if (etatForm == ''){\r\n        group.controls.etatForm.setErrors({\"empty\": true});\r\n      }\r\n    } else if (typeboolForm == 'oui' && nom_organeForm == '') {\r\n      group.controls.nom_organeForm.setErrors({\"empty\": true});\r\n      group.controls.organeboolForm.setErrors(null);\r\n      group.controls.etatForm.setErrors(null);\r\n\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/validators.ts","import {Component, ViewChild} from '@angular/core';\r\nimport {ViewController, NavParams, Searchbar} from 'ionic-angular';\r\n\r\nimport { Diacritics } from '../../providers/diacritics';\r\n\r\n@Component({\r\n  selector: 'autocomplete',\r\n  templateUrl: 'autocomplete.html'\r\n})\r\n\r\nexport class Autocomplete {\r\n  autocompleteItems: any;\r\n  autocompleteData: any;\r\n  autocompleteEntry: string;\r\n\r\n  @ViewChild(Searchbar) searchbar:Searchbar;\r\n\r\n  constructor (public viewCtrl: ViewController, public params: NavParams, public diacritics: Diacritics) {\r\n    this.autocompleteItems = [];\r\n    this.autocompleteData = this.params.get('dataAutocomplete');\r\n    this.autocompleteEntry = this.params.get('entryAutocomplete');\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    setTimeout(() => {\r\n      this.searchbar.setFocus();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime la page modale ouverte, en passant comme valeur à la page initiale la valeur entrée par l'utilisateur.\r\n   * @method dismiss\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  dismiss() {\r\n    this.viewCtrl.dismiss(this.autocompleteEntry);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui supprime la page modale ouverte, en passant comme valeur à la page initiale la valeur sélectionnée dans la liste proposée (autocompletion).\r\n   * @method chooseItem\r\n   * @param {any} - la valeur sélectionnée dans la liste proposée est passée à la fonction.\r\n   * @returns {} - aucune valeur n'est retournée par la fonction.\r\n   */\r\n  chooseItem(item: any) {\r\n    this.autocompleteEntry = item;\r\n    this.viewCtrl.dismiss(item);\r\n  }\r\n\r\n  /**\r\n   * Fonction qui, à chaque saisie de l'utilisateur, compare le contenu saisi et la liste proposée pour limiter la liste aux valeurs qui correspondent à la saisie : autocompletion.\r\n   * @method updateSearch\r\n   * @param {} - aucun paramètre n'est passé à la fonction.\r\n   * @returns {string} - une liste mise à jour suite à la nouvelle saisie de l'utilisateur est retournée par la fonction.\r\n   */\r\n  updateSearch() {\r\n    if (this.autocompleteEntry == '') {\r\n      this.autocompleteItems = [];\r\n    } else {\r\n      let arrayLength: number = this.autocompleteData.length;\r\n      var i: number = 0;\r\n      var nbItems: number = 0;\r\n      var table = [];\r\n      while (i < arrayLength && nbItems < 20) {\r\n        let strVal = this.diacritics.replaceDiacritics(this.autocompleteData[i].toLowerCase());\r\n        let strEntry = this.diacritics.replaceDiacritics(this.autocompleteEntry.toLowerCase());\r\n        if (strVal.indexOf(strEntry) > -1) {\r\n          table.push(strVal);\r\n          nbItems++;\r\n        }\r\n        i++;\r\n      }\r\n      this.autocompleteItems = table;\r\n      /*this.autocompleteItems = this.params.get('dataAutocomplete').filter((val)=>{\r\n        let strVal = this.diacritics.replaceDiacritics(val.toLowerCase());\r\n        let strEntry = this.diacritics.replaceDiacritics(this.autocompleteEntry.toLowerCase());\r\n        return strVal.indexOf(strEntry) > -1;\r\n      });*/\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/autocomplete/autocomplete.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Api } from './api';\r\nimport { LocalStockage } from './localstockage';\r\n\r\n/**\r\n * @class Traitement - Ce service utilise les requêtes définies dans le fichier providers/api pour faire l'interface entre le client et le serveur (et la table Traitement).\r\n * Les réponses du serveur aux requêtes envoyées sont des objets JSON, et doivent commencer par le champ `status` : \r\n * ```json\r\n * {\r\n *   status: 'success',\r\n *   traitres: {\r\n *     // ce champ doit contenir a minima l'id du formulaire, stocké sous le nom idForm.\r\n *   }\r\n * }\r\n * ```\r\n * Si le champ `status` n'est pas un `success`, une erreur est envoyée.\r\n */\r\n\r\n@Injectable()\r\nexport class Traitement {\r\n\r\n  public subCreate: any;\r\n\r\n  constructor(public http: Http, public api: Api, public localstockage: LocalStockage) { }\r\n\r\n  /**\r\n   * Méthode qui envoie une requête GET pour récupérer la liste des traitements enregistrés dans la base côté serveur. \r\n   * @method getTrait\r\n   * @requires providers/api - la fonction utilise la méthode get.\r\n   * @param {string} - le type de traitement est passé à la méthode.\r\n   * @returns {Observable} - un observable est renvoyé pour suivre l'état de la requête. \r\n   */\r\n  getTrait(type) {\r\n    let seq = this.api.get('traitements/' + type).share();\r\n    return seq;\r\n  }\r\n\r\n  /**\r\n   * Fonction qui permet de faire un tableau avec les traitements.\r\n   * @method makeTraitList\r\n   * @requires providers/traitement - elle appelle la méthode getTrait.\r\n   * @param {array} - un tableau de référence des traitements à sélectionner est passée à la fonction.\r\n   * @returns {array} - deux tableaux avec les traitements et leurs noms sont retournés par la fonction.\r\n   */\r\n  makeTraitList(refArray){\r\n    return new Promise((resolve,reject) => {\r\n      let traitementList = [];\r\n      let traitementTab = [];\r\n      refArray.forEach((reference) => {\r\n        this.getTrait(reference).toPromise().then((res) => {\r\n          var auxTab = res.json().data;\r\n          auxTab.forEach((element) => {\r\n            if (element.nom !== 'autres_phyto' && element.nom !== 'autres_ttcan') {\r\n              traitementList.push(element.nom.charAt(0).toUpperCase() + element.nom.slice(1).toLowerCase());\r\n              traitementTab.push(element);\r\n            }\r\n          });\r\n        }).catch((err)=>{\r\n          console.error('ERROR', err);\r\n        });\r\n      });\r\n      resolve([traitementList,traitementTab]);\r\n    });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/traitement.ts"],"sourceRoot":""}